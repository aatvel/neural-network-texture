{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport { useMatcapTexture, Center, Text3D, OrbitControls, useTexture } from \"@react-three/drei\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { resultPic } from \"./Interface\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32);\nconst material = new THREE.MeshMatcapMaterial();\nexport default function Experience() {\n  _s();\n\n  const donuts = useRef([]);\n  const [matcapTexture] = useMatcapTexture(\"7B5254_E9DCC7_B19986_C8AC91\", 256);\n  useFrame((state, delta) => {\n    for (const donut of donuts.current) {\n      donut.rotation.y += delta * 0.2;\n    }\n  });\n  useEffect(() => {\n    matcapTexture.encoding = THREE.sRGBEncoding;\n    matcapTexture.needsUpdate = true;\n    material.matcap = matcapTexture;\n    material.needsUpdate = true;\n  }, []); // const colorMap = useTexture(`https://oaidalleapiprodscus.blob.core.windows.net/private/org-lbxoen0mOI5KRCru2r0mN4ku/user-JSGOfblmRoEJK6xqyol9mna1/img-U1e2qh3uCGFI7iaFbuJO4fUA.png?st=2022-12-22T13%3A35%3A39Z&se=2022-12-22T15%3A35%3A39Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2022-12-22T11%3A29%3A31Z&ske=2022-12-23T11%3A29%3A31Z&sks=b&skv=2021-08-06&sig=dfGSvIDk%2BIYsX%2Bfpgb%2BL/3rU6vw2F%2BdAbA1QDPar5Ow%3D`);\n\n  console.return( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {\n      makeDefault: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: [/*#__PURE__*/_jsxDEV(Text3D, {\n        material: material,\n        font: \"./fonts/helvetiker_regular.typeface.json\",\n        size: 0.75,\n        height: 0.2,\n        curveSegments: 12,\n        bevelEnabled: true,\n        bevelThickness: 0.02,\n        bevelSize: 0.02,\n        bevelOffset: 0,\n        bevelSegments: 5,\n        \"position-x\": 4,\n        children: \"TRY IT!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n          args: [7, 3.5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), [...Array(100)].map((value, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: element => donuts.current[index] = element,\n      geometry: torusGeometry,\n      material: material,\n      position: [Math.cos(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2), (Math.random() - 0.4) * 10, Math.sin(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2)],\n      scale: 0.2 + Math.random() * 0.2,\n      rotation: [Math.random() * Math.PI, Math.random() * Math.PI, 0],\n      children: /*#__PURE__*/_jsxDEV(\"torusGeometry\", {\n        args: [1, 0.6, 16, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true));\n}\n\n_s(Experience, \"MPw70YXS1cQ+LCo4lvSLaXXXolE=\", false, function () {\n  return [useMatcapTexture, useFrame];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useMatcapTexture","Center","Text3D","OrbitControls","useTexture","useEffect","useRef","useState","useFrame","THREE","resultPic","torusGeometry","TorusGeometry","material","MeshMatcapMaterial","Experience","donuts","matcapTexture","state","delta","donut","current","rotation","y","encoding","sRGBEncoding","needsUpdate","matcap","console","return","Array","map","value","index","element","Math","cos","random","PI","sin"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/Experience.js"],"sourcesContent":["import {\n  useMatcapTexture,\n  Center,\n  Text3D,\n  OrbitControls,\n  useTexture\n} from \"@react-three/drei\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useFrame  } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { resultPic } from \"./Interface\";\n\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32);\nconst material = new THREE.MeshMatcapMaterial();\n\nexport default function Experience() {\n  const donuts = useRef([]);\n  const [matcapTexture] = useMatcapTexture(\"7B5254_E9DCC7_B19986_C8AC91\", 256);\n  useFrame((state, delta) => {\n    for (const donut of donuts.current) {\n      donut.rotation.y += delta * 0.2;\n    }\n  });\n  useEffect(() => {\n    matcapTexture.encoding = THREE.sRGBEncoding;\n    matcapTexture.needsUpdate = true;\n\n    material.matcap = matcapTexture;\n    material.needsUpdate = true;\n  }, []);\n\n  // const colorMap = useTexture(`https://oaidalleapiprodscus.blob.core.windows.net/private/org-lbxoen0mOI5KRCru2r0mN4ku/user-JSGOfblmRoEJK6xqyol9mna1/img-U1e2qh3uCGFI7iaFbuJO4fUA.png?st=2022-12-22T13%3A35%3A39Z&se=2022-12-22T15%3A35%3A39Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2022-12-22T11%3A29%3A31Z&ske=2022-12-23T11%3A29%3A31Z&sks=b&skv=2021-08-06&sig=dfGSvIDk%2BIYsX%2Bfpgb%2BL/3rU6vw2F%2BdAbA1QDPar5Ow%3D`);\n  console.\n\n\n  return (\n    <>\n      {/* <Perf position=\"top-left\" /> */}\n\n      <OrbitControls makeDefault />\n\n      <Center>\n        <Text3D\n          material={material}\n          font=\"./fonts/helvetiker_regular.typeface.json\"\n          size={0.75}\n          height={0.2}\n          curveSegments={12}\n          bevelEnabled\n          bevelThickness={0.02}\n          bevelSize={0.02}\n          bevelOffset={0}\n          bevelSegments={5}\n          position-x={4}\n        >\n          TRY IT!\n        </Text3D>\n\n        \n        <mesh>\n            <planeGeometry args={[7, 3.5]} />\n            <meshBasicMaterial color=\"purple\" />\n        </mesh>\n      </Center>\n\n      {[...Array(100)].map((value, index) => (\n        <mesh\n          ref={(element) => (donuts.current[index] = element)}\n          key={index}\n          geometry={torusGeometry}\n          material={material}\n          position={[\n            Math.cos(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2),\n            (Math.random() - 0.4) * 10,\n            Math.sin(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2),\n          ]}\n          scale={0.2 + Math.random() * 0.2}\n          rotation={[Math.random() * Math.PI, Math.random() * Math.PI, 0]}\n        >\n          <torusGeometry args={[1, 0.6, 16, 32]} />\n        </mesh>\n      ))}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}