{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport { useMatcapTexture, Center, Text3D, OrbitControls } from \"@react-three/drei\";\nimport \"./interface.css\";\nimport PurplePlane from \"./Plane\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32);\nconst material = new THREE.MeshMatcapMaterial();\nexport default function Experience() {\n  _s();\n\n  const donuts = useRef([]);\n  const [matcapTexture] = useMatcapTexture(\"7B5254_E9DCC7_B19986_C8AC91\", 256);\n  useFrame((state, delta) => {\n    for (const donut of donuts.current) {\n      donut.rotation.y += delta * 0.2;\n    }\n  });\n  useEffect(() => {\n    matcapTexture.encoding = THREE.sRGBEncoding;\n    matcapTexture.needsUpdate = true;\n    material.matcap = matcapTexture;\n    material.needsUpdate = true;\n  }, []);\n  const [prompt, setPrompt] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\");\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    setPlaceholder(`Search ${prompt}..`);\n    setLoading(true);\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\"\n    });\n    setLoading(false);\n    setResult(res.data.data[0].url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-main\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generating..Please Wait..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lds-ripple\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generate an Image using Open AI API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), result.length > 0 ?\n        /*#__PURE__*/\n        // <PurplePlane src={result} />\n        _jsxDEV(\"img\", {\n          className: \"result-image\",\n          src: result,\n          alt: \"result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"app-input\",\n            placeholder: placeholder,\n            onChange: e => setPrompt(e.target.value),\n            rows: \"10\",\n            cols: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-create \",\n            onClick: generateImage,\n            children: \"Generate an Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: [/*#__PURE__*/_jsxDEV(Text3D, {\n          material: material,\n          font: \"./fonts/helvetiker_regular.typeface.json\",\n          size: 0.75,\n          height: 0.2,\n          curveSegments: 12,\n          bevelEnabled: true,\n          bevelThickness: 0.02,\n          bevelSize: 0.02,\n          bevelOffset: 0,\n          bevelSegments: 5,\n          \"position-x\": 4,\n          children: \"TRY IT!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PurplePlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), [...Array(100)].map((value, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: element => donuts.current[index] = element,\n        geometry: torusGeometry,\n        material: material,\n        position: [Math.cos(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2), (Math.random() - 0.4) * 10, Math.sin(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2)],\n        scale: 0.2 + Math.random() * 0.2,\n        rotation: [Math.random() * Math.PI, Math.random() * Math.PI, 0],\n        children: /*#__PURE__*/_jsxDEV(\"torusGeometry\", {\n          args: [1, 0.6, 16, 32]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_s(Experience, \"I3ot0AqCKSV/28DBP+JrRInREkg=\", false, function () {\n  return [useMatcapTexture, useFrame];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useMatcapTexture","Center","Text3D","OrbitControls","PurplePlane","useEffect","useRef","useState","useFrame","THREE","Configuration","OpenAIApi","torusGeometry","TorusGeometry","material","MeshMatcapMaterial","Experience","donuts","matcapTexture","state","delta","donut","current","rotation","y","encoding","sRGBEncoding","needsUpdate","matcap","prompt","setPrompt","result","setResult","loading","setLoading","placeholder","setPlaceholder","configuration","apiKey","openai","generateImage","res","createImage","n","size","data","url","length","e","target","value","Array","map","index","element","Math","cos","random","PI","sin"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/Experience.js"],"sourcesContent":["import {\n  useMatcapTexture,\n  Center,\n  Text3D,\n  OrbitControls,\n} from \"@react-three/drei\";\nimport \"./interface.css\";\nimport PurplePlane from \"./Plane\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32);\nconst material = new THREE.MeshMatcapMaterial();\n\nexport default function Experience() {\n  const donuts = useRef([]);\n  const [matcapTexture] = useMatcapTexture(\"7B5254_E9DCC7_B19986_C8AC91\", 256);\n  useFrame((state, delta) => {\n    for (const donut of donuts.current) {\n      donut.rotation.y += delta * 0.2;\n    }\n  });\n  useEffect(() => {\n    matcapTexture.encoding = THREE.sRGBEncoding;\n    matcapTexture.needsUpdate = true;\n\n    material.matcap = matcapTexture;\n    material.needsUpdate = true;\n  }, []);\n\n  const [prompt, setPrompt] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\n    \"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\"\n  );\n  const configuration = new Configuration({\n    apiKey: \"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\",\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    setPlaceholder(`Search ${prompt}..`);\n    setLoading(true);\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\",\n    });\n    setLoading(false);\n    setResult(res.data.data[0].url);\n  };\n\n  return (\n    <>\n\n     <div className=\"app-main\">\n      {loading ? (\n        <>\n          <h2>Generating..Please Wait..</h2>\n          <div className=\"lds-ripple\">\n            <div></div>\n            <div></div>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2>Generate an Image using Open AI API</h2>\n\n          \n          {result.length > 0 ? (\n            // <PurplePlane src={result} />\n            \n            <img className=\"result-image\" src={result} alt=\"result\" />\n          ) : (\n            <><textarea\n            className=\"app-input\"\n            placeholder={placeholder}\n            onChange={(e) => setPrompt(e.target.value)}\n            rows=\"10\"\n            cols=\"40\"\n          />\n          <button className=\"button-create \" onClick={generateImage}>Generate an Image</button></>\n          )}\n        </>\n      )}\n    \n      {/* <Perf position=\"top-left\" /> */}\n\n      <OrbitControls makeDefault />\n\n      <Center>\n        <Text3D\n          material={material}\n          font=\"./fonts/helvetiker_regular.typeface.json\"\n          size={0.75}\n          height={0.2}\n          curveSegments={12}\n          bevelEnabled\n          bevelThickness={0.02}\n          bevelSize={0.02}\n          bevelOffset={0}\n          bevelSegments={5}\n          position-x={4}\n        >\n          TRY IT!\n        </Text3D>\n\n        <PurplePlane />\n      </Center>\n\n      {[...Array(100)].map((value, index) => (\n        <mesh\n          ref={(element) => (donuts.current[index] = element)}\n          key={index}\n          geometry={torusGeometry}\n          material={material}\n          position={[\n            Math.cos(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2),\n            (Math.random() - 0.4) * 10,\n            Math.sin(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2),\n          ]}\n          scale={0.2 + Math.random() * 0.2}\n          rotation={[Math.random() * Math.PI, Math.random() * Math.PI, 0]}\n        >\n          <torusGeometry args={[1, 0.6, 16, 32]} />\n        </mesh>\n      ))}\n\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}