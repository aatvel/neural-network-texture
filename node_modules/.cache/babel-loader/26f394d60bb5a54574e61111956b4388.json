{"ast":null,"code":"import React, { useMemo, useEffect, memo, useRef, Suspense, useState, forwardRef, useLayoutEffect } from 'react';\nimport { useThree, addEffect, addAfterEffect, addTail, useFrame, Canvas } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { MathUtils } from 'three';\nimport create from 'zustand';\nimport { styled } from '@stitches/react';\nimport { PauseIcon, TriangleDownIcon, TriangleUpIcon, LayersIcon, ImageIcon, RocketIcon, EyeOpenIcon, EyeNoneIcon, ButtonIcon, CubeIcon, VercelLogoIcon, ActivityLogIcon, LightningBoltIcon, RulerHorizontalIcon, LapTimerIcon, TextAlignJustifyIcon, BarChartIcon, MarginIcon, MinusIcon, DotIcon, DropdownMenuIcon } from '@radix-ui/react-icons';\nimport { Text } from '@react-three/drei';\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { createRoot } from 'react-dom/client';\nimport { estimateBytesUsed } from 'three-stdlib';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass GLPerf {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.names = [''];\n    this.finished = [];\n    this.gl = void 0;\n    this.extension = void 0;\n    this.query = void 0;\n    this.paused = false;\n    this.queryHasResult = false;\n    this.queryCreated = false;\n    this.isWebGL2 = true;\n    this.memAccums = [];\n    this.gpuAccums = [];\n    this.activeAccums = [];\n    this.chart = [];\n    this.gpuChart = [];\n    this.memChart = [];\n\n    this.paramLogger = () => {};\n\n    this.glFinish = () => {};\n\n    this.chartLogger = () => {};\n\n    this.chartLen = 60;\n    this.maxMemory = 1500;\n    this.chartHz = 10;\n    this.chartFrame = 0;\n    this.gpuTimeProcess = 0;\n    this.chartTime = 0;\n    this.activeQueries = 0;\n    this.circularId = 0;\n    this.detected = 0;\n    this.frameId = 0;\n    this.rafId = 0;\n    this.checkQueryId = 0;\n    this.uuid = undefined;\n    this.currentMem = 0;\n    this.paramFrame = 0;\n    this.paramTime = 0;\n\n    this.now = () => {};\n\n    this.t0 = 0;\n    window.GLPerf = window.GLPerf || {};\n    Object.assign(this, settings);\n    this.chart = new Array(this.chartLen).fill(0);\n    this.gpuChart = new Array(this.chartLen).fill(0);\n    this.memChart = new Array(this.chartLen).fill(0);\n\n    this.now = () => window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n    this.initGpu();\n    this.is120hz();\n  }\n\n  initGpu() {\n    this.uuid = MathUtils.generateUUID();\n\n    if (this.gl) {\n      this.isWebGL2 = true;\n\n      if (!this.extension) {\n        this.extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n      }\n\n      if (this.extension === null) {\n        this.isWebGL2 = false;\n      }\n    }\n  }\n\n  is120hz() {\n    let n = 0;\n\n    const loop = t => {\n      if (++n < 20) {\n        this.rafId = window.requestAnimationFrame(loop);\n      } else {\n        this.detected = Math.ceil(1e3 * n / (t - this.t0) / 70);\n        window.cancelAnimationFrame(this.rafId);\n      }\n\n      if (!this.t0) this.t0 = t;\n    };\n\n    this.rafId = window.requestAnimationFrame(loop);\n  }\n\n  addUI(name) {\n    if (this.names.indexOf(name) === -1) {\n      this.names.push(name);\n      this.gpuAccums.push(0);\n      this.activeAccums.push(false);\n    }\n  }\n\n  nextFrame(now) {\n    this.frameId++;\n    const t = now || this.now();\n    const duration = t - this.paramTime;\n    let gpu = 0;\n\n    if (this.frameId <= 1) {\n      this.paramFrame = this.frameId;\n      this.paramTime = t;\n    } else {\n      if (t >= this.paramTime + 200) {\n        this.maxMemory = window.performance.memory ? window.performance.memory.jsHeapSizeLimit / 1048576 : 0;\n        const frameCount = this.frameId - this.paramFrame;\n        const fps = frameCount * 1000 / duration;\n\n        for (let i = 0; i < this.names.length; i++) {\n          gpu = this.isWebGL2 ? this.gpuAccums[i] : this.gpuAccums[i] / duration;\n          this.currentMem = Math.round(window.performance && window.performance.memory ? window.performance.memory.usedJSHeapSize / 1048576 : 0);\n          this.paramLogger({\n            gpu,\n            i,\n            mem: this.currentMem,\n            maxMemory: this.maxMemory,\n            fps: fps,\n            duration: Math.round(duration),\n            frameCount\n          });\n\n          if (this.isWebGL2) {\n            this.gpuAccums[i] = 0;\n          } else {\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n        }\n\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      }\n    }\n\n    if (!this.detected || !this.chartFrame) {\n      this.chartFrame = this.frameId;\n      this.chartTime = t;\n      this.circularId = 0;\n    } else {\n      const timespan = t - this.chartTime;\n      let hz = this.chartHz * timespan / 1e3;\n\n      while (--hz > 0 && this.detected) {\n        const frameCount = this.frameId - this.chartFrame;\n        const fps = frameCount / timespan * 1e3;\n        this.chart[this.circularId % this.chartLen] = fps;\n        const memS = 1000 / this.currentMem;\n        const gpuS = (this.isWebGL2 ? this.gpuAccums[1] * 2 : Math.round(this.gpuAccums[1] / duration * 100)) + 4;\n\n        if (gpuS > 0) {\n          this.gpuChart[this.circularId % this.chartLen] = gpuS;\n        }\n\n        if (memS > 0) {\n          this.memChart[this.circularId % this.chartLen] = memS;\n        }\n\n        for (let i = 0; i < this.names.length; i++) {\n          this.chartLogger({\n            i,\n            data: {\n              fps: this.chart,\n              gpu: this.gpuChart,\n              mem: this.memChart\n            },\n            circularId: this.circularId\n          });\n        }\n\n        this.circularId++;\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n      }\n    }\n  }\n\n  startGpu() {\n    const gl = this.gl;\n    const ext = this.extension;\n    if (!gl || !ext) return;\n\n    if (this.isWebGL2) {\n      let available = false;\n      let disjoint, ns;\n\n      if (this.query) {\n        this.queryHasResult = false;\n        let query = this.query;\n        available = gl.getQueryParameter(query, gl.QUERY_RESULT_AVAILABLE);\n        disjoint = gl.getParameter(ext.GPU_DISJOINT_EXT);\n\n        if (available && !disjoint) {\n          ns = gl.getQueryParameter(this.query, gl.QUERY_RESULT);\n          const ms = ns * 1e-6;\n\n          if (available && ms > 0) {\n            if (!disjoint) {\n              this.activeAccums.forEach((_active, i) => {\n                this.gpuAccums[i] = ms;\n              });\n            }\n          }\n        }\n      }\n\n      if (available || !this.query) {\n        this.queryCreated = true;\n        this.query = gl.createQuery();\n        gl.beginQuery(ext.TIME_ELAPSED_EXT, this.query);\n      }\n    }\n  }\n\n  endGpu() {\n    const ext = this.extension;\n    const gl = this.gl;\n\n    if (this.isWebGL2 && this.queryCreated && gl.getQuery(ext.TIME_ELAPSED_EXT, gl.CURRENT_QUERY)) {\n      gl.endQuery(ext.TIME_ELAPSED_EXT);\n    }\n  }\n\n  begin(name) {\n    this.startGpu();\n    this.updateAccums(name);\n  }\n\n  end(name) {\n    this.endGpu();\n    this.updateAccums(name);\n  }\n\n  updateAccums(name) {\n    let nameId = this.names.indexOf(name);\n\n    if (nameId === -1) {\n      nameId = this.names.length;\n      this.addUI(name);\n    }\n\n    const t = this.now();\n    this.activeAccums[nameId] = !this.activeAccums[nameId];\n    this.t0 = t;\n  }\n\n}\n\nconst countGeoDrawCalls = programs => {\n  programs.forEach((program, _pkey) => {\n    const {\n      meshes\n    } = program;\n\n    if (!meshes) {\n      return;\n    }\n\n    let drawCounts = {\n      total: 0,\n      type: 'Triangle',\n      data: []\n    };\n    Object.keys(meshes).forEach(key => {\n      const mesh = meshes[key];\n      const {\n        geometry,\n        material\n      } = mesh;\n      let index = geometry.index;\n      const position = geometry.attributes.position;\n      if (!position) return;\n      let rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        rangeFactor = 0;\n      }\n\n      const dataCount = index !== null ? index.count : position.count;\n      const rangeStart = geometry.drawRange.start * rangeFactor;\n      const rangeCount = geometry.drawRange.count * rangeFactor;\n      const drawStart = rangeStart;\n      const drawEnd = Math.min(dataCount, rangeStart + rangeCount) - 1;\n      let countInstanceRatio = 1;\n      const instanceCount = mesh.count || 1;\n      let type = 'Triangle';\n      let mostDrawCalls = 0;\n\n      if (mesh.isMesh) {\n        if (material.wireframe === true) {\n          type = 'Line';\n          countInstanceRatio = countInstanceRatio / 2;\n        } else {\n          type = 'Triangle';\n          countInstanceRatio = countInstanceRatio / 3;\n        }\n      } else if (mesh.isLine) {\n        type = 'Line';\n\n        if (mesh.isLineSegments) {\n          countInstanceRatio = countInstanceRatio / 2;\n        } else if (mesh.isLineLoop) {\n          countInstanceRatio = countInstanceRatio;\n        } else {\n          countInstanceRatio = countInstanceRatio - 1;\n        }\n      } else if (mesh.isPoints) {\n        type = 'Point';\n        countInstanceRatio = countInstanceRatio;\n      } else if (mesh.isSprite) {\n        type = 'Triangle';\n        countInstanceRatio = countInstanceRatio / 3;\n      }\n\n      const drawCount = Math.round(Math.max(0, drawEnd - drawStart + 1) * (countInstanceRatio * instanceCount));\n\n      if (drawCount > mostDrawCalls) {\n        mostDrawCalls = drawCount;\n        drawCounts.type = type;\n      }\n\n      drawCounts.total += drawCount;\n      drawCounts.data.push({\n        drawCount,\n        type\n      });\n      mesh.userData.drawCount = {\n        type,\n        count: drawCount\n      };\n    });\n    program.drawCounts = drawCounts;\n  });\n};\n\nconst updateMatrixWorldTemp = THREE.Object3D.prototype.updateMatrixWorld;\nconst updateWorldMatrixTemp = THREE.Object3D.prototype.updateWorldMatrix;\nconst updateMatrixTemp = THREE.Object3D.prototype.updateMatrix;\nlet matriceWorldCount = {\n  value: 0\n};\nlet matriceCount = {\n  value: 0\n};\n\nconst isUUID = uuid => {\n  let s = '' + uuid;\n  s = s.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\n\n  if (s === null) {\n    return false;\n  }\n\n  return true;\n};\n\nconst addMuiPerfID = (material, currentObjectWithMaterials) => {\n  if (!material.defines) {\n    material.defines = {};\n  }\n\n  if (material.defines && !material.defines.muiPerf) {\n    material.defines = Object.assign(material.defines || {}, {\n      muiPerf: material.uuid\n    });\n  }\n\n  const uuid = material.uuid;\n\n  if (!currentObjectWithMaterials[uuid]) {\n    currentObjectWithMaterials[uuid] = {\n      meshes: {},\n      material: material\n    };\n    material.needsUpdate = true;\n  }\n\n  material.needsUpdate = false;\n  return uuid;\n};\n\nconst getMUIIndex = muid => muid === 'muiPerf';\n\nconst usePerfStore = create(set => ({\n  log: null,\n  paused: false,\n  triggerProgramsUpdate: 0,\n  customData: 0,\n  chart: {\n    data: {\n      fps: [],\n      gpu: [],\n      mem: []\n    },\n    circularId: 0\n  },\n  gl: undefined,\n  objectWithMaterials: null,\n  scene: undefined,\n  programs: new Map(),\n  sceneLength: undefined,\n  tab: 'infos'\n}));\n\nconst setCustomData = customData => {\n  usePerfStore.setState({\n    customData\n  });\n};\n\nconst getCustomData = () => {\n  return usePerfStore.getState().customData;\n};\n\nconst usePerfFunc = () => {\n  var _usePerfStore;\n\n  return {\n    log: usePerfStore(state => state.log),\n    gl: (_usePerfStore = usePerfStore(state => state.gl)) === null || _usePerfStore === void 0 ? void 0 : _usePerfStore.info,\n    programs: usePerfStore(state => state.programs)\n  };\n};\n\nconst Headless = _ref2 => {\n  let {\n    trackCPU,\n    chart,\n    deepAnalyze,\n    matrixUpdate\n  } = _ref2;\n  const {\n    gl,\n    scene\n  } = useThree();\n  usePerfStore.setState({\n    gl,\n    scene\n  });\n  const PerfLib = useMemo(() => {\n    const PerfLib = new GLPerf({\n      trackGPU: true,\n      chartLen: chart ? chart.length : 120,\n      chartHz: chart ? chart.hz : 60,\n      gl: gl.getContext(),\n      chartLogger: chart => {\n        usePerfStore.setState({\n          chart\n        });\n      },\n      paramLogger: logger => {\n        usePerfStore.setState({\n          log: {\n            maxMemory: logger.maxMemory,\n            gpu: logger.gpu,\n            mem: logger.mem,\n            fps: logger.fps,\n            totalTime: logger.duration,\n            frameCount: logger.frameCount\n          }\n        });\n      }\n    });\n    const callbacks = new Map();\n    const callbacksAfter = new Map();\n    Object.defineProperty(THREE.Scene.prototype, 'onBeforeRender', {\n      get() {\n        var _this = this;\n\n        return function () {\n          var _callbacks$get;\n\n          if (PerfLib) {\n            PerfLib.begin('profiler');\n          }\n\n          (_callbacks$get = callbacks.get(_this)) === null || _callbacks$get === void 0 ? void 0 : _callbacks$get(...arguments);\n        };\n      },\n\n      set(callback) {\n        callbacks.set(this, callback);\n      },\n\n      configurable: true\n    });\n    Object.defineProperty(THREE.Scene.prototype, 'onAfterRender', {\n      get() {\n        var _this2 = this;\n\n        return function () {\n          var _callbacksAfter$get;\n\n          if (PerfLib) {\n            PerfLib.end('profiler');\n          }\n\n          (_callbacksAfter$get = callbacksAfter.get(_this2)) === null || _callbacksAfter$get === void 0 ? void 0 : _callbacksAfter$get(...arguments);\n        };\n      },\n\n      set(callback) {\n        callbacksAfter.set(this, callback);\n      },\n\n      configurable: true\n    });\n    return PerfLib;\n  }, []);\n  useEffect(() => {\n    if (matrixUpdate) {\n      THREE.Object3D.prototype.updateMatrixWorld = function () {\n        if (this.matrixWorldNeedsUpdate || arguments[0]) {\n          matriceWorldCount.value++;\n        }\n\n        updateMatrixWorldTemp.apply(this, arguments);\n      };\n\n      THREE.Object3D.prototype.updateWorldMatrix = function () {\n        matriceWorldCount.value++;\n        updateWorldMatrixTemp.apply(this, arguments);\n      };\n\n      THREE.Object3D.prototype.updateMatrix = function () {\n        matriceCount.value++;\n        updateMatrixTemp.apply(this, arguments);\n      };\n    }\n\n    gl.info.autoReset = false;\n    let effectSub = null;\n    let afterEffectSub = null;\n    if (!gl.info) return;\n    effectSub = addEffect(function preRafR3FPerf() {\n      if (usePerfStore.getState().paused) {\n        usePerfStore.setState({\n          paused: false\n        });\n      }\n\n      matriceCount.value -= 1;\n      matriceWorldCount.value = 0;\n      matriceCount.value = 0;\n\n      if (gl.info) {\n        gl.info.reset();\n      }\n    });\n    afterEffectSub = addAfterEffect(function postRafR3FPerf() {\n      if (PerfLib && !PerfLib.paused) {\n        PerfLib.nextFrame(window.performance.now());\n      }\n\n      if (deepAnalyze) {\n        var _gl$info, _gl$info$programs;\n\n        const currentObjectWithMaterials = {};\n        const programs = new Map();\n        scene.traverse(function deepAnalyzeR3FPerf(object) {\n          if (object instanceof THREE.Mesh || object instanceof THREE.Points) {\n            if (object.material) {\n              let uuid = object.material.uuid;\n              const isTroika = Array.isArray(object.material) && object.material.length > 1;\n\n              if (isTroika) {\n                uuid = addMuiPerfID(object.material[1], currentObjectWithMaterials);\n              } else {\n                uuid = addMuiPerfID(object.material, currentObjectWithMaterials);\n              }\n\n              currentObjectWithMaterials[uuid].meshes[object.uuid] = object;\n            }\n          }\n        });\n        gl === null || gl === void 0 ? void 0 : (_gl$info = gl.info) === null || _gl$info === void 0 ? void 0 : (_gl$info$programs = _gl$info.programs) === null || _gl$info$programs === void 0 ? void 0 : _gl$info$programs.forEach(program => {\n          const cacheKeySplited = program.cacheKey.split(',');\n          const muiPerfTracker = cacheKeySplited[cacheKeySplited.findIndex(getMUIIndex) + 1];\n\n          if (isUUID(muiPerfTracker) && currentObjectWithMaterials[muiPerfTracker]) {\n            const {\n              material,\n              meshes\n            } = currentObjectWithMaterials[muiPerfTracker];\n            programs.set(muiPerfTracker, {\n              program,\n              material,\n              meshes,\n              drawCounts: {\n                total: 0,\n                type: 'triangle',\n                data: []\n              },\n              expand: false,\n              visible: true\n            });\n          }\n        });\n\n        if (programs.size !== usePerfStore.getState().programs.size) {\n          countGeoDrawCalls(programs);\n          usePerfStore.setState({\n            programs: programs,\n            triggerProgramsUpdate: usePerfStore.getState().triggerProgramsUpdate++\n          });\n        }\n      }\n    });\n    return () => {\n      if (PerfLib) {\n        window.cancelAnimationFrame(PerfLib.rafId);\n        window.cancelAnimationFrame(PerfLib.checkQueryId);\n      }\n\n      if (matrixUpdate) {\n        THREE.Object3D.prototype.updateMatrixWorld = updateMatrixTemp;\n      }\n\n      effectSub();\n      afterEffectSub();\n    };\n  }, [PerfLib, gl, trackCPU, chart, matrixUpdate]);\n  useEffect(() => {\n    const unsub = addTail(function postRafTailR3FPerf() {\n      if (PerfLib) {\n        PerfLib.paused = true;\n        matriceCount.value = 0;\n        matriceWorldCount.value = 0;\n        usePerfStore.setState({\n          paused: true,\n          log: {\n            maxMemory: 0,\n            gpu: 0,\n            mem: 0,\n            fps: 0,\n            totalTime: 0,\n            frameCount: 0\n          }\n        });\n      }\n\n      return false;\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n  return null;\n};\n\nconst PerfS = styled('div', {\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  zIndex: 9999,\n  fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif`,\n  backgroundColor: 'rgba(36, 36, 36, .9)',\n  color: '#fff',\n  margin: 0,\n  minHeight: '100px',\n  padding: '4px 0',\n  '-webkit-font-smoothing': 'antialiased',\n  '-moz-osx-font-smoothing': 'grayscale',\n  userSelect: 'none',\n  '&.top-left': {\n    right: 'initial',\n    left: 0\n  },\n  '&.bottom-left': {\n    right: 'initial',\n    top: 'initial',\n    bottom: 0,\n    left: 0,\n    '.__perf_toggle': {\n      top: '-20px',\n      bottom: 'initial'\n    }\n  },\n  '&.bottom-right': {\n    top: 'initial',\n    bottom: 0,\n    '.__perf_toggle': {\n      top: '-20px',\n      bottom: 'initial'\n    }\n  },\n  '&.minimal': {\n    backgroundColor: 'rgba(36, 36, 36, .75)'\n  },\n  '*': {\n    margin: '0',\n    padding: '0',\n    border: '0',\n    fontSize: '100%',\n    lineHeight: '1',\n    verticalAlign: 'baseline'\n  }\n});\nconst PerfSmallI = styled('small', {\n  position: 'absolute',\n  right: 0,\n  fontSize: '10px'\n});\nconst PerfI = styled('div', {\n  display: 'inline-flex',\n  fontStyle: 'normal',\n  padding: 0,\n  lineHeight: '13px',\n  fontSize: '14px',\n  width: '62px',\n  position: 'relative',\n  pointerEvents: 'auto',\n  cursor: 'default',\n  fontWeight: 500,\n  letterSpacing: '0px',\n  textAlign: 'left',\n  height: '29px',\n  whiteSpace: 'nowrap',\n  justifyContent: 'space-evenly',\n  fontVariantNumeric: 'tabular-nums',\n  small: {\n    paddingLeft: '12px'\n  },\n  svg: {\n    padding: 0,\n    color: 'rgba(145, 145, 145, 0.3)',\n    fontSize: '40px',\n    position: 'absolute',\n    zIndex: 1,\n    maxHeight: '20px',\n    left: ' 50%',\n    marginLeft: '-23px',\n    top: '4px'\n  }\n});\nconst PerfB = styled('span', {\n  verticalAlign: 'bottom',\n  position: 'absolute',\n  bottom: '5px',\n  color: 'rgba(101, 197, 188, 1)',\n  textAlign: 'right',\n  letterSpacing: '1px',\n  fontSize: '8px',\n  fontWeight: '500',\n  width: '60px'\n});\nconst PerfIContainer = styled('div', {\n  display: 'flex'\n});\nconst ProgramHeader = styled('div', {\n  backgroundColor: '#404040',\n  padding: '6px',\n  display: 'block',\n  fontSize: '12px',\n  marginBottom: '6px',\n  cursor: 'pointer',\n  '*': {\n    cursor: 'pointer !important'\n  },\n  '> span': {},\n  small: {\n    fontSize: '9px'\n  },\n  '> b': {\n    marginRight: '4px',\n    cursor: 'pointer'\n  }\n});\nconst Graph = styled('div', {\n  height: '66px',\n  overflow: 'hidden',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  top: '0px',\n  justifyContent: 'center',\n  width: '100%',\n  minWidth: '310px',\n  margin: '0 auto',\n  canvas: {\n    background: 'transparent !important',\n    position: 'absolute !important'\n  }\n});\nconst Graphpc = styled('div', {\n  textAlign: 'center',\n  fontWeight: 700,\n  fontSize: '12px',\n  lineHeight: '12px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  verticalAlign: 'middle',\n  color: '#f1f1f1',\n  padding: '7px',\n  width: '100%',\n  backgroundColor: 'rgba(36, 36, 37, 0.8)',\n  zIndex: 1,\n  position: 'absolute',\n  height: '100%'\n});\nconst Toggle = styled('div', {\n  pointerEvents: 'auto',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  backgroundColor: 'rgb(41, 43, 45)',\n  marginTop: '6px',\n  width: 'auto',\n  margin: '0',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  padding: '4px 6px',\n  '&.__perf_toggle_tab_active': {\n    backgroundColor: 'rgb(31 31 31)'\n  },\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left'\n  }\n});\nconst ToggleVisible = styled('div', {\n  pointerEvents: 'auto',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  float: 'right',\n  backgroundColor: 'rgb(41, 43, 45)',\n  width: 'auto',\n  margin: '0',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  padding: '4px 6px',\n  '&.__perf_toggle_tab_active': {\n    backgroundColor: 'rgb(31 31 31)'\n  },\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left'\n  }\n});\nconst ProgramGeo = styled('div', {\n  padding: '4px 6px',\n  fontSize: '12px',\n  pointerEvents: 'auto'\n});\nconst ProgramTitle = styled('span', {\n  fontWeight: 'bold',\n  letterSpacing: '0.08em',\n  maxWidth: '145px',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  fontSize: '11px',\n  marginRight: '10px'\n});\nconst ContainerScroll = styled('div', {\n  maxHeight: '50vh',\n  overflowY: 'auto',\n  marginTop: '38px'\n});\nconst ProgramsContainer = styled('div', {\n  marginTop: '0'\n});\nconst ProgramsULHeader = styled('div', {\n  display: 'flex',\n  position: 'relative',\n  fontWeight: 'bold',\n  color: '#fff',\n  lineHeight: '14px',\n  svg: {\n    marginRight: '4px',\n    display: 'inline-block'\n  }\n});\nconst ProgramsUL = styled('ul', {\n  display: 'block',\n  position: 'relative',\n  paddingLeft: '10px',\n  margin: '6px 6px',\n  img: {\n    maxHeight: '60px',\n    maxWidth: '100%',\n    margin: '6px auto',\n    display: 'block'\n  },\n  '&:after': {\n    content: '',\n    position: 'absolute',\n    left: '0px',\n    top: '0px',\n    width: '1px',\n    height: '100%',\n    backgroundColor: 'grey',\n    transform: 'translateX(-50%)',\n    maxHeight: '50vh',\n    overflowY: 'auto'\n  },\n  li: {\n    borderBottom: '1px solid #313131',\n    display: 'block',\n    padding: '4px',\n    margin: 0,\n    lineHeight: 1,\n    verticalAlign: 'middle',\n    height: '24px'\n  },\n  b: {\n    fontWeight: 'bold'\n  },\n  small: {\n    textAlign: 'revert',\n    letterSpacing: '1px',\n    fontSize: '10px',\n    fontWeight: '500',\n    marginLeft: '2px',\n    color: 'rgb(101, 197, 188)'\n  }\n});\nconst ProgramConsole = styled('button', {\n  fontWeight: 'bold',\n  letterSpacing: '0.02em',\n  backgroundColor: 'rgb(41, 43, 45)',\n  color: 'rgb(211, 211, 211)',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  cursor: 'pointer',\n  display: 'block',\n  verticalAlign: 'middle',\n  fontSize: '11px',\n  padding: '5px',\n  margin: '4px auto'\n});\nconst ToggleContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  backgroundColor: 'rgb(41, 43, 45)',\n  marginTop: '6px',\n  width: 'auto',\n  margin: '0 auto',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  position: 'absolute',\n  right: 0,\n  bottom: ' -20px',\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left'\n  }\n});\nconst ProgramsGeoLi = styled('li', {\n  display: 'flex !important',\n  height: 'auto !important',\n  span: {\n    height: '40px',\n    display: 'block',\n    position: 'relative'\n  },\n  b: {\n    paddingLeft: '12px'\n  }\n});\nconst TextHighHZ = memo(_ref3 => {\n  let {\n    isPerf,\n    color,\n    customData,\n    isMemory,\n    isShadersInfo,\n    metric,\n    fontSize,\n    offsetY: _offsetY = 0,\n    offsetX,\n    round,\n    hasInstance\n  } = _ref3;\n  const {\n    width: w,\n    height: h\n  } = useThree(s => s.viewport);\n  const fpsRef = useRef(null);\n  const fpsInstanceRef = useRef(null);\n  useFrame(function updateR3FPerfText() {\n    const gl = usePerfStore.getState().gl;\n    const log = usePerfStore.getState().log;\n    if (!log || !fpsRef.current) return;\n\n    if (customData) {\n      fpsRef.current.text = usePerfStore.getState().customData;\n    }\n\n    if (!metric) return;\n    let info = log[metric];\n\n    if (isShadersInfo) {\n      var _gl$info$programs;\n\n      info = (_gl$info$programs = gl.info.programs) === null || _gl$info$programs === void 0 ? void 0 : _gl$info$programs.length;\n    } else if (metric === 'matriceCount') {\n      info = matriceCount.value;\n    } else if (!isPerf && gl.info.render) {\n      const infos = isMemory ? gl.info.memory : gl.info.render;\n      info = infos[metric];\n    }\n\n    fpsRef.current.text = (metric === 'maxMemory' ? '/' : '') + (Math.round(info * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round);\n\n    if (hasInstance) {\n      const infosInstance = gl.info.instance;\n\n      if (typeof infosInstance === 'undefined' && metric !== 'matriceCount') {\n        return;\n      }\n\n      let infoInstance;\n\n      if (metric === 'matriceCount') {\n        infoInstance = matriceWorldCount.value;\n      } else {\n        infoInstance = infosInstance[metric];\n      }\n\n      if (infoInstance > 0) {\n        fpsRef.current.fontSize = fontSize / 1.15;\n        fpsInstanceRef.current.fontSize = info > 0 ? fontSize / 1.4 : fontSize;\n        fpsRef.current.position.y = h / 2 - _offsetY - fontSize / 1.9;\n        fpsInstanceRef.current.text = ' ±\t' + (Math.round(infoInstance * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round);\n      } else {\n        fpsRef.current.position.y = h / 2 - _offsetY - fontSize;\n        fpsRef.current.fontSize = fontSize;\n      }\n    }\n\n    matriceCount.value -= 1;\n    fpsRef.current.updateMatrix();\n    fpsRef.current.matrixWorld.copy(fpsRef.current.matrix);\n  });\n  return jsxs(Suspense, {\n    fallback: null,\n    children: [jsx(Text, {\n      textAlign: \"justify\",\n      matrixAutoUpdate: false,\n      ref: fpsRef,\n      fontSize: fontSize,\n      position: [-w / 2 + offsetX + fontSize, h / 2 - _offsetY - fontSize, 0],\n      color: color,\n      characters: \"0123456789\",\n      onUpdate: self => {\n        self.updateMatrix();\n        matriceCount.value -= 1;\n        self.matrixWorld.copy(self.matrix);\n      },\n      children: \"0\"\n    }), hasInstance && jsx(Text, {\n      textAlign: \"justify\",\n      matrixAutoUpdate: false,\n      ref: fpsInstanceRef,\n      fontSize: 8,\n      position: [-w / 2 + offsetX + fontSize, h / 2 - _offsetY - fontSize * 1.15, 0],\n      color: 'lightgrey',\n      characters: \"0123456789\",\n      onUpdate: self => {\n        self.updateMatrix();\n        matriceCount.value -= 1;\n        self.matrixWorld.copy(self.matrix);\n      }\n    })]\n  });\n});\n\nconst TextsHighHZ = _ref4 => {\n  let {\n    colorBlind,\n    customData,\n    minimal,\n    matrixUpdate\n  } = _ref4;\n  const fontSize = 14;\n  return jsxs(Fragment, {\n    children: [jsx(TextHighHZ, {\n      color: `rgb(${colorsGraph(colorBlind).fps.toString()})`,\n      isPerf: true,\n      metric: \"fps\",\n      fontSize: fontSize,\n      offsetX: 140,\n      round: 0\n    }), jsx(TextHighHZ, {\n      color: '',\n      isPerf: true,\n      metric: \"mem\",\n      fontSize: fontSize,\n      offsetX: 80,\n      round: 0\n    }), jsx(TextHighHZ, {\n      color: '',\n      isPerf: true,\n      metric: \"maxMemory\",\n      fontSize: 8,\n      offsetX: 112,\n      offsetY: 10,\n      round: 0\n    }), jsx(TextHighHZ, {\n      color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,\n      isPerf: true,\n      metric: \"gpu\",\n      fontSize: fontSize,\n      offsetX: 10,\n      round: 3\n    }), !minimal ? jsxs(Fragment, {\n      children: [jsx(TextHighHZ, {\n        metric: \"calls\",\n        fontSize: fontSize,\n        offsetX: 200,\n        round: 0,\n        hasInstance: true\n      }), jsx(TextHighHZ, {\n        metric: \"triangles\",\n        fontSize: fontSize,\n        offsetX: 260,\n        round: 0,\n        hasInstance: true\n      }), jsx(TextHighHZ, {\n        isMemory: true,\n        metric: \"geometries\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 0,\n        round: 0\n      }), jsx(TextHighHZ, {\n        isMemory: true,\n        metric: \"textures\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 80,\n        round: 0\n      }), jsx(TextHighHZ, {\n        isShadersInfo: true,\n        metric: \"programs\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 140,\n        round: 0\n      }), jsx(TextHighHZ, {\n        metric: \"lines\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 200,\n        round: 0,\n        hasInstance: true\n      }), jsx(TextHighHZ, {\n        metric: \"points\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 260,\n        round: 0,\n        hasInstance: true\n      }), matrixUpdate && jsx(TextHighHZ, {\n        isPerf: true,\n        metric: \"matriceCount\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 320,\n        round: 0,\n        hasInstance: true\n      })]\n    }) : null, customData && jsx(TextHighHZ, {\n      color: `rgb(${colorsGraph(colorBlind).custom.toString()})`,\n      customData: customData,\n      fontSize: fontSize,\n      offsetY: 0,\n      offsetX: minimal ? 200 : 320,\n      round: 0\n    })]\n  });\n};\n\nconst ChartCurve = _ref5 => {\n  let {\n    colorBlind,\n    minimal,\n    chart: _chart = {\n      length: 30,\n      hz: 15\n    }\n  } = _ref5;\n  const curves = useMemo(() => {\n    return {\n      fps: new Float32Array(_chart.length * 3),\n      mem: new Float32Array(_chart.length * 3),\n      gpu: new Float32Array(_chart.length * 3)\n    };\n  }, [_chart]);\n  const fpsRef = useRef(null);\n  const gpuRef = useRef(null);\n  const memRef = useRef(null);\n  const dummyVec3 = useMemo(() => new THREE.Vector3(0, 0, 0), []);\n\n  const updatePoints = function (element) {\n    let factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let ref = arguments.length > 2 ? arguments[2] : undefined;\n    let viewport = arguments.length > 3 ? arguments[3] : undefined;\n    let maxVal = 0;\n    const {\n      width: w,\n      height: h\n    } = viewport;\n    const chart = usePerfStore.getState().chart.data[element];\n\n    if (!chart || chart.length === 0) {\n      return;\n    }\n\n    const padding = minimal ? 2 : 6;\n    const paddingTop = minimal ? 12 : 50;\n    let len = chart.length;\n\n    for (let i = 0; i < len; i++) {\n      let id = (usePerfStore.getState().chart.circularId + i + 1) % len;\n\n      if (chart[id] !== undefined) {\n        if (chart[id] > maxVal) {\n          maxVal = chart[id] * factor;\n        }\n\n        dummyVec3.set(padding + i / (len - 1) * (w - padding * 2) - w / 2, Math.min(100, chart[id]) * factor / 100 * (h - padding * 2 - paddingTop) - h / 2, 0);\n        dummyVec3.toArray(ref.attributes.position.array, i * 3);\n      }\n    }\n\n    ref.attributes.position.needsUpdate = true;\n  };\n\n  const [supportMemory] = useState(window.performance.memory);\n  useFrame(function updateChartCurve(_ref6) {\n    let {\n      viewport\n    } = _ref6;\n    updatePoints('fps', 1, fpsRef.current, viewport);\n    updatePoints('gpu', 5, gpuRef.current, viewport);\n\n    if (supportMemory) {\n      updatePoints('mem', 1, memRef.current, viewport);\n    }\n  });\n  return jsxs(Fragment, {\n    children: [jsxs(\"line\", {\n      children: [jsx(\"bufferGeometry\", {\n        ref: fpsRef,\n        children: jsx(\"bufferAttribute\", {\n          attach: 'attributes-position',\n          count: _chart.length,\n          array: curves.fps,\n          itemSize: 3,\n          needsUpdate: true\n        })\n      }), jsx(\"lineBasicMaterial\", {\n        color: `rgb(${colorsGraph(colorBlind).fps.toString()})`,\n        transparent: true,\n        opacity: 0.5\n      })]\n    }), jsxs(\"line\", {\n      children: [jsx(\"bufferGeometry\", {\n        ref: gpuRef,\n        children: jsx(\"bufferAttribute\", {\n          attach: 'attributes-position',\n          count: _chart.length,\n          array: curves.gpu,\n          itemSize: 3,\n          needsUpdate: true\n        })\n      }), jsx(\"lineBasicMaterial\", {\n        color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,\n        transparent: true,\n        opacity: 0.5\n      })]\n    }), supportMemory && jsxs(\"line\", {\n      children: [jsx(\"bufferGeometry\", {\n        ref: memRef,\n        children: jsx(\"bufferAttribute\", {\n          attach: 'attributes-position',\n          count: _chart.length,\n          array: curves.mem,\n          itemSize: 3,\n          needsUpdate: true\n        })\n      }), jsx(\"lineBasicMaterial\", {\n        color: `rgb(${colorsGraph(colorBlind).mem.toString()})`,\n        transparent: true,\n        opacity: 0.5\n      })]\n    })]\n  });\n};\n\nconst ChartUI = _ref7 => {\n  let {\n    colorBlind,\n    chart,\n    customData,\n    matrixUpdate,\n    showGraph: _showGraph = true,\n    antialias: _antialias = true,\n    minimal\n  } = _ref7;\n  const canvas = useRef(undefined);\n  const paused = usePerfStore(state => state.paused);\n  return jsxs(Graph, {\n    style: {\n      display: 'flex',\n      position: 'absolute',\n      height: `${minimal ? 37 : _showGraph ? 100 : 60}px`,\n      minWidth: `${minimal ? '100px' : customData ? '370px' : '310px'}`\n    },\n    children: [jsx(Canvas, {\n      ref: canvas,\n      orthographic: true,\n      dpr: _antialias ? [1, 2] : 1,\n      gl: {\n        antialias: true,\n        alpha: true,\n        stencil: false,\n        depth: false\n      },\n      onCreated: _ref8 => {\n        let {\n          scene\n        } = _ref8;\n        scene.traverse(obj => {\n          obj.matrixWorldAutoUpdate = false;\n          obj.matrixAutoUpdate = false;\n        });\n      },\n      flat: true,\n      style: {\n        marginBottom: `-42px`,\n        position: 'relative',\n        pointerEvents: 'none',\n        background: 'transparent !important',\n        height: `${minimal ? 37 : _showGraph ? 100 : 60}px`\n      },\n      children: !paused ? jsxs(Fragment, {\n        children: [jsx(Renderer, {}), jsx(TextsHighHZ, {\n          customData: customData,\n          minimal: minimal,\n          matrixUpdate: matrixUpdate\n        }), _showGraph && jsx(ChartCurve, {\n          colorBlind: colorBlind,\n          minimal: minimal,\n          chart: chart\n        })]\n      }) : null\n    }), paused && jsxs(Graphpc, {\n      children: [jsx(PauseIcon, {}), \" PAUSED\"]\n    })]\n  });\n};\n\nconst Renderer = () => {\n  useFrame(function updateR3FPerf(_ref9) {\n    let {\n      gl,\n      scene,\n      camera\n    } = _ref9;\n    camera.updateMatrix();\n    matriceCount.value -= 1;\n    camera.matrixWorld.copy(camera.matrix);\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    gl.render(scene, camera);\n    matriceWorldCount.value = 0;\n    matriceCount.value = 0;\n  }, Infinity);\n  return null;\n};\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst _excluded = [\"portal\", \"className\", \"children\"];\nconst Html = forwardRef((_ref, ref) => {\n  let {\n    portal,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const gl = useThree(state => state.gl);\n  const group = useRef(null);\n  const rootRef = useRef(null);\n  const target = (portal === null || portal === void 0 ? void 0 : portal.current) != null ? portal.current : gl.domElement.parentNode;\n  useLayoutEffect(() => {\n    if (!group.current || !target) return;\n    const el = document.createElement('div');\n    const root = rootRef.current = createRoot(el);\n    target.appendChild(el);\n    return () => {\n      root.unmount();\n      rootRef.current = null;\n      target.removeChild(el);\n    };\n  }, [target]);\n  useLayoutEffect(() => {\n    const root = rootRef.current;\n    if (!root) return;\n    root.render(jsx(\"div\", {\n      ref: ref,\n      className: className,\n      children: children\n    }));\n  });\n  return jsx(\"group\", _objectSpread2(_objectSpread2({}, props), {}, {\n    ref: group\n  }));\n});\n\nconst addTextureUniforms = (id, texture) => {\n  const repeatType = wrap => {\n    switch (wrap) {\n      case 1000:\n        return 'RepeatWrapping';\n\n      case 1001:\n        return 'ClampToEdgeWrapping';\n\n      case 1002:\n        return 'MirroredRepeatWrapping';\n\n      default:\n        return 'ClampToEdgeWrapping';\n    }\n  };\n\n  const encodingType = encoding => {\n    switch (encoding) {\n      case 3000:\n        return 'LinearEncoding';\n\n      case 3001:\n        return 'sRGBEncoding';\n\n      case 3002:\n        return 'RGBEEncoding';\n\n      case 3003:\n        return 'LogLuvEncoding';\n\n      case 3004:\n        return 'RGBM7Encoding';\n\n      case 3005:\n        return 'RGBM16Encoding';\n\n      case 3006:\n        return 'RGBDEncoding';\n\n      case 3007:\n        return 'GammaEncoding';\n\n      default:\n        return 'ClampToEdgeWrapping';\n    }\n  };\n\n  return {\n    name: id,\n    url: texture.image.currentSrc,\n    encoding: encodingType(texture.encoding),\n    wrapT: repeatType(texture.image.wrapT),\n    flipY: texture.flipY.toString()\n  };\n};\n\nconst UniformsGL = _ref10 => {\n  let {\n    program,\n    material,\n    setTexNumber\n  } = _ref10;\n  const gl = usePerfStore(state => state.gl);\n  const [uniforms, set] = useState(null);\n  useEffect(() => {\n    if (gl) {\n      const data = program === null || program === void 0 ? void 0 : program.getUniforms();\n      let TexCount = 0;\n      const format = new Map();\n      data.seq.forEach(e => {\n        if (!e.id.includes('uTroika') && e.id !== 'isOrthographic' && e.id !== 'uvTransform' && e.id !== 'lightProbe' && e.id !== 'projectionMatrix' && e.id !== 'viewMatrix' && e.id !== 'normalMatrix' && e.id !== 'modelMatrix' && e.id !== 'modelViewMatrix') {\n          let values = [];\n          let data = {\n            name: e.id\n          };\n\n          if (e.cache) {\n            e.cache.forEach(v => {\n              if (typeof v !== 'undefined') {\n                values.push(v.toString().substring(0, 4));\n              }\n            });\n            data.value = values.join();\n\n            if (material[e.id] && material[e.id].image) {\n              if (material[e.id].image) {\n                TexCount++;\n                data.value = addTextureUniforms(e.id, material[e.id]);\n              }\n            }\n\n            if (!data.value) {\n              data.value = 'empty';\n            }\n\n            format.set(e.id, data);\n          }\n        }\n      });\n\n      if (material.uniforms) {\n        Object.keys(material.uniforms).forEach(key => {\n          const uniform = material.uniforms[key];\n\n          if (uniform.value) {\n            const {\n              value\n            } = uniform;\n            let data = {\n              name: key\n            };\n\n            if (key.includes('uTroika')) {\n              return;\n            }\n\n            if (value instanceof THREE.Texture) {\n              TexCount++;\n              data.value = addTextureUniforms(key, value);\n            } else {\n              let sb = JSON.stringify(value);\n\n              try {\n                sb = JSON.stringify(value);\n              } catch (_err) {\n                sb = value.toString();\n              }\n\n              data.value = sb;\n            }\n\n            format.set(key, data);\n          }\n        });\n      }\n\n      if (TexCount > 0) {\n        setTexNumber(TexCount);\n      }\n\n      set(format);\n    }\n  }, []);\n  return jsx(ProgramsUL, {\n    children: uniforms && Array.from(uniforms.values()).map(uniform => {\n      return jsx(\"span\", {\n        children: typeof uniform.value === 'string' ? jsx(\"li\", {\n          children: jsxs(\"span\", {\n            children: [uniform.name, \" :\", ' ', jsxs(\"b\", {\n              children: [uniform.value.substring(0, 30), uniform.value.length > 30 ? '...' : '']\n            })]\n          })\n        }) : jsxs(Fragment, {\n          children: [jsx(\"li\", {\n            children: jsxs(\"b\", {\n              children: [uniform.value.name, \":\"]\n            })\n          }), jsxs(\"div\", {\n            children: [Object.keys(uniform.value).map(key => {\n              return key !== 'name' ? jsx(\"div\", {\n                children: key === 'url' ? jsx(\"a\", {\n                  href: uniform.value[key],\n                  target: \"_blank\",\n                  children: jsx(\"img\", {\n                    src: uniform.value[key]\n                  })\n                }) : jsxs(\"li\", {\n                  children: [key, \": \", jsx(\"b\", {\n                    children: uniform.value[key]\n                  })]\n                })\n              }, key) : null;\n            }), jsxs(ProgramConsole, {\n              onClick: () => {\n                var _material$uniforms$un;\n\n                console.info(material[uniform.value.name] || (material === null || material === void 0 ? void 0 : (_material$uniforms$un = material.uniforms[uniform.value.name]) === null || _material$uniforms$un === void 0 ? void 0 : _material$uniforms$un.value));\n              },\n              children: [\"console.info(\", uniform.value.name, \");\"]\n            })]\n          })]\n        })\n      }, uniform.name);\n    })\n  });\n};\n\nconst DynamicDrawCallInfo = _ref11 => {\n  let {\n    el\n  } = _ref11;\n  usePerfStore(state => state.log);\n  const gl = usePerfStore(state => state.gl);\n\n  const getVal = el => {\n    if (!gl) return 0;\n    const res = Math.round(el.drawCounts.total / (gl.info.render.triangles + gl.info.render.lines + gl.info.render.points) * 100 * 10) / 10;\n    return isFinite(res) && res || 0;\n  };\n\n  return jsx(Fragment, {\n    children: el.drawCounts.total > 0 && jsxs(PerfI, {\n      style: {\n        height: 'auto',\n        width: 'auto',\n        margin: '0 4px'\n      },\n      children: [el.drawCounts.type === 'Triangle' ? jsx(VercelLogoIcon, {\n        style: {\n          top: '-1px'\n        }\n      }) : jsx(ActivityLogIcon, {\n        style: {\n          top: '-1px'\n        }\n      }), el.drawCounts.total, jsxs(\"small\", {\n        children: [el.drawCounts.type, \"s\"]\n      }), gl && jsxs(PerfB, {\n        style: {\n          bottom: '-10px',\n          width: '40px',\n          fontWeight: 'bold'\n        },\n        children: [el.visible && !el.material.wireframe ? getVal(el) : 0, \"%\"]\n      })]\n    })\n  });\n};\n\nconst ProgramUI = _ref12 => {\n  let {\n    el\n  } = _ref12;\n  const [showProgram, setShowProgram] = useState(el.visible);\n  const [toggleProgram, set] = useState(el.expand);\n  const [texNumber, setTexNumber] = useState(0);\n  const {\n    meshes,\n    program,\n    material\n  } = el;\n  return jsxs(ProgramGeo, {\n    children: [jsxs(ProgramHeader, {\n      onClick: () => {\n        el.expand = !toggleProgram;\n        Object.keys(meshes).forEach(key => {\n          const mesh = meshes[key];\n          mesh.material.wireframe = false;\n        });\n        set(!toggleProgram);\n      },\n      children: [jsx(Toggle, {\n        style: {\n          marginRight: '6px'\n        },\n        children: toggleProgram ? jsx(\"span\", {\n          children: jsx(TriangleDownIcon, {})\n        }) : jsx(\"span\", {\n          children: jsx(TriangleUpIcon, {})\n        })\n      }), program && jsxs(\"span\", {\n        children: [jsx(ProgramTitle, {\n          children: program.name\n        }), jsxs(PerfI, {\n          style: {\n            height: 'auto',\n            width: 'auto',\n            margin: '0 4px'\n          },\n          children: [jsx(LayersIcon, {\n            style: {\n              top: '-1px'\n            }\n          }), Object.keys(meshes).length, jsx(\"small\", {\n            children: Object.keys(meshes).length > 1 ? 'users' : 'user'\n          })]\n        }), texNumber > 0 && jsxs(PerfI, {\n          style: {\n            height: 'auto',\n            width: 'auto',\n            margin: '0 4px'\n          },\n          children: [texNumber > 1 ? jsx(ImageIcon, {\n            style: {\n              top: '-1px'\n            }\n          }) : jsx(ImageIcon, {\n            style: {\n              top: '-1px'\n            }\n          }), texNumber, jsx(\"small\", {\n            children: \"tex\"\n          })]\n        }), jsx(DynamicDrawCallInfo, {\n          el: el\n        }), material.glslVersion === '300 es' && jsxs(PerfI, {\n          style: {\n            height: 'auto',\n            width: 'auto',\n            margin: '0 4px'\n          },\n          children: [jsx(RocketIcon, {\n            style: {\n              top: '-1px'\n            }\n          }), \"300\", jsx(\"small\", {\n            children: \"es\"\n          }), jsx(PerfB, {\n            style: {\n              bottom: '-10px',\n              width: '40px'\n            },\n            children: \"glsl\"\n          })]\n        })]\n      }), jsx(ToggleVisible, {\n        onPointerEnter: () => {\n          Object.keys(meshes).forEach(key => {\n            const mesh = meshes[key];\n            mesh.material.wireframe = true;\n          });\n        },\n        onPointerLeave: () => {\n          Object.keys(meshes).forEach(key => {\n            const mesh = meshes[key];\n            mesh.material.wireframe = false;\n          });\n        },\n        onClick: e => {\n          e.stopPropagation();\n          Object.keys(meshes).forEach(key => {\n            const mesh = meshes[key];\n            const invert = !showProgram;\n            mesh.visible = invert;\n            el.visible = invert;\n            setShowProgram(invert);\n          });\n        },\n        children: showProgram ? jsx(EyeOpenIcon, {}) : jsx(EyeNoneIcon, {})\n      })]\n    }), jsxs(\"div\", {\n      style: {\n        maxHeight: toggleProgram ? '9999px' : 0,\n        overflow: 'hidden'\n      },\n      children: [jsxs(ProgramsULHeader, {\n        children: [jsx(ButtonIcon, {}), \" Uniforms:\"]\n      }), jsx(UniformsGL, {\n        program: program,\n        material: material,\n        setTexNumber: setTexNumber\n      }), jsxs(ProgramsULHeader, {\n        children: [jsx(CubeIcon, {}), \" Geometries:\"]\n      }), jsx(ProgramsUL, {\n        children: meshes && Object.keys(meshes).map(key => meshes[key] && meshes[key].geometry && jsxs(ProgramsGeoLi, {\n          children: [jsxs(\"span\", {\n            children: [meshes[key].geometry.type, \": \"]\n          }), meshes[key].userData && meshes[key].userData.drawCount && jsxs(\"b\", {\n            children: [jsxs(\"div\", {\n              children: [meshes[key].userData.drawCount.count, jsxs(\"small\", {\n                children: [\" \", meshes[key].userData.drawCount.type, \"s\"]\n              })]\n            }), jsx(\"br\", {}), jsxs(\"div\", {\n              children: [Math.round(estimateBytesUsed(meshes[key].geometry) / 1024 * 1000) / 1000, \"Kb\", jsx(\"small\", {\n                children: \" memory used\"\n              })]\n            })]\n          })]\n        }, key))\n      }), jsxs(ProgramConsole, {\n        onClick: () => {\n          console.info(material);\n        },\n        children: [\"console.info(\", material.type, \")\"]\n      })]\n    })]\n  });\n};\n\nconst ProgramsUI = () => {\n  usePerfStore(state => state.triggerProgramsUpdate);\n  const programs = usePerfStore(state => state.programs);\n  return jsx(ProgramsContainer, {\n    children: programs && Array.from(programs.values()).map(el => {\n      if (!el) {\n        return null;\n      }\n\n      return el ? jsx(ProgramUI, {\n        el: el\n      }, el.material.uuid) : null;\n    })\n  });\n};\n\nconst colorsGraph = colorBlind => {\n  const colors = {\n    fps: colorBlind ? '100, 143, 255' : '238,38,110',\n    mem: colorBlind ? '254, 254, 98' : '66,226,46',\n    gpu: colorBlind ? '254,254,254' : '253,151,31',\n    custom: colorBlind ? '86,180,233' : '40,255,255'\n  };\n  return colors;\n};\n\nconst DynamicUI = _ref13 => {\n  let {\n    showGraph,\n    colorBlind,\n    customData,\n    minimal\n  } = _ref13;\n  const gl = usePerfStore(state => state.gl);\n  return gl ? jsxs(PerfIContainer, {\n    children: [jsxs(PerfI, {\n      children: [jsx(LightningBoltIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`\n        } : {},\n        children: \"GPU\"\n      }), jsx(PerfSmallI, {\n        children: \"ms\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(RulerHorizontalIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).mem.toString()})`\n        } : {},\n        children: \"Memory\"\n      }), jsx(PerfSmallI, {\n        children: \"mb\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(LapTimerIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).fps})`\n        } : {},\n        children: \"FPS\"\n      })]\n    }), !minimal && gl && jsxs(PerfI, {\n      children: [jsx(TextAlignJustifyIcon, {}), jsx(PerfB, {\n        children: gl.info.render.calls === 1 ? 'call' : 'calls'\n      })]\n    }), !minimal && gl && jsxs(PerfI, {\n      children: [jsx(VercelLogoIcon, {}), jsx(PerfB, {\n        children: \"Triangles\"\n      })]\n    }), customData && jsxs(PerfI, {\n      children: [jsx(BarChartIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).custom})`\n        } : {},\n        children: customData.name\n      }), customData.info && jsx(PerfSmallI, {\n        children: customData.info\n      })]\n    })]\n  }) : null;\n};\n\nconst PerfUI = _ref14 => {\n  let {\n    showGraph,\n    colorBlind,\n    deepAnalyze,\n    customData,\n    matrixUpdate,\n    openByDefault,\n    minimal\n  } = _ref14;\n  return jsxs(Fragment, {\n    children: [jsx(DynamicUI, {\n      showGraph: showGraph,\n      colorBlind: colorBlind,\n      customData: customData,\n      minimal: minimal\n    }), !minimal && jsx(PerfThree, {\n      matrixUpdate: matrixUpdate,\n      openByDefault: openByDefault,\n      deepAnalyze: deepAnalyze,\n      showGraph: showGraph\n    })]\n  });\n};\n\nconst InfoUI = _ref15 => {\n  let {\n    matrixUpdate\n  } = _ref15;\n  return jsxs(\"div\", {\n    children: [jsxs(PerfI, {\n      children: [jsx(MarginIcon, {}), jsx(PerfB, {\n        children: \"Geometries\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(ImageIcon, {}), jsx(PerfB, {\n        children: \"Textures\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(ActivityLogIcon, {}), jsx(PerfB, {\n        children: \"shaders\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(MinusIcon, {}), jsx(PerfB, {\n        children: \"Lines\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(DotIcon, {}), jsx(PerfB, {\n        children: \"Points\"\n      })]\n    }), matrixUpdate && jsxs(PerfI, {\n      children: [jsx(DropdownMenuIcon, {}), jsx(PerfB, {\n        children: \"Matrices\"\n      })]\n    })]\n  });\n};\n\nconst ToggleEl = _ref16 => {\n  let {\n    tab,\n    title,\n    set\n  } = _ref16;\n  const tabStore = usePerfStore(state => state.tab);\n  return jsx(Toggle, {\n    className: `${tabStore === tab ? ' __perf_toggle_tab_active' : ''}`,\n    onClick: () => {\n      set(true);\n      usePerfStore.setState({\n        tab: tab\n      });\n    },\n    children: jsx(\"span\", {\n      children: title\n    })\n  });\n};\n\nconst PerfThree = _ref17 => {\n  let {\n    openByDefault,\n    showGraph,\n    deepAnalyze,\n    matrixUpdate\n  } = _ref17;\n  const [show, set] = React.useState(openByDefault);\n  return jsxs(\"span\", {\n    children: [jsx(TabContainers, {\n      show: show,\n      showGraph: showGraph,\n      matrixUpdate: matrixUpdate\n    }), openByDefault && !deepAnalyze ? null : jsxs(ToggleContainer, {\n      className: '__perf_toggle',\n      children: [deepAnalyze && jsx(ToggleEl, {\n        tab: \"programs\",\n        title: \"Programs\",\n        set: set\n      }), deepAnalyze && jsx(ToggleEl, {\n        tab: \"infos\",\n        title: \"Infos\",\n        set: set\n      }), jsx(Toggle, {\n        onClick: () => {\n          set(!show);\n        },\n        children: show ? jsxs(\"span\", {\n          children: [jsx(TriangleDownIcon, {}), \" Minimize\"]\n        }) : jsxs(\"span\", {\n          children: [jsx(TriangleUpIcon, {}), \" More\"]\n        })\n      })]\n    })]\n  });\n};\n\nconst TabContainers = _ref18 => {\n  let {\n    show,\n    showGraph,\n    matrixUpdate\n  } = _ref18;\n  const tab = usePerfStore(state => state.tab);\n  return jsxs(Fragment, {\n    children: [jsx(InfoUI, {\n      matrixUpdate: matrixUpdate\n    }), show && jsx(\"div\", {\n      children: jsx(ContainerScroll, {\n        style: {\n          marginTop: showGraph ? '38px' : 0\n        },\n        children: tab === 'programs' && jsx(ProgramsUI, {})\n      })\n    })]\n  });\n};\n\nconst Gui = _ref19 => {\n  let {\n    showGraph,\n    colorBlind,\n    openByDefault,\n    className,\n    style,\n    position,\n    chart,\n    deepAnalyze,\n    antialias,\n    customData,\n    matrixUpdate,\n    minimal\n  } = _ref19;\n  const perfContainerRef = useRef(null);\n  return jsxs(Fragment, {\n    children: [jsx(Headless, {\n      chart: chart,\n      deepAnalyze: deepAnalyze,\n      matrixUpdate: matrixUpdate\n    }), jsx(Html, {\n      transform: false,\n      children: jsxs(PerfS, {\n        className: (className ? ' '.concat(className) : ' ') + ` ${position ? position : ''} ${minimal ? 'minimal' : ''}`,\n        style: _objectSpread2({\n          minHeight: minimal ? '37px' : showGraph ? '100px' : '60px'\n        }, style),\n        ref: perfContainerRef,\n        children: [jsx(ChartUI, {\n          perfContainerRef: perfContainerRef,\n          colorBlind: colorBlind,\n          chart: chart,\n          showGraph: showGraph,\n          antialias: antialias,\n          customData: customData,\n          minimal: minimal,\n          matrixUpdate: matrixUpdate\n        }), jsx(PerfUI, {\n          colorBlind: colorBlind,\n          showGraph: showGraph,\n          deepAnalyze: deepAnalyze,\n          openByDefault: openByDefault,\n          customData: customData,\n          matrixUpdate: matrixUpdate,\n          minimal: minimal\n        })]\n      })\n    })]\n  });\n};\n\nconst Perf = _ref20 => {\n  let {\n    headless: _headless = false,\n    colorBlind: _colorBlind = false,\n    showGraph: _showGraph = true,\n    trackCPU: _trackCPU = false,\n    deepAnalyze: _deepAnalyze = false,\n    antialias: _antialias = true,\n    openByDefault: _openByDefault = true,\n    customData,\n    matrixUpdate: _matrixUpdate = false,\n    position: _position = 'top-right',\n    chart: _chart = {\n      length: 30,\n      hz: 15\n    },\n    className,\n    style,\n    minimal: _minimal = false\n  } = _ref20;\n  return _headless ? jsx(Headless, {\n    chart: _chart,\n    deepAnalyze: _deepAnalyze,\n    matrixUpdate: _matrixUpdate\n  }) : jsx(Gui, {\n    colorBlind: _colorBlind,\n    showGraph: _showGraph,\n    trackCPU: _trackCPU,\n    openByDefault: _openByDefault,\n    className: className,\n    style: style,\n    position: _position,\n    antialias: _antialias,\n    chart: _chart,\n    deepAnalyze: _deepAnalyze,\n    minimal: _minimal,\n    customData: customData,\n    matrixUpdate: _matrixUpdate\n  });\n};\n\nconst usePerf = usePerfFunc;\nexport { Perf, getCustomData, setCustomData, usePerf };","map":{"version":3,"names":["React","useMemo","useEffect","memo","useRef","Suspense","useState","forwardRef","useLayoutEffect","useThree","addEffect","addAfterEffect","addTail","useFrame","Canvas","THREE","MathUtils","create","styled","PauseIcon","TriangleDownIcon","TriangleUpIcon","LayersIcon","ImageIcon","RocketIcon","EyeOpenIcon","EyeNoneIcon","ButtonIcon","CubeIcon","VercelLogoIcon","ActivityLogIcon","LightningBoltIcon","RulerHorizontalIcon","LapTimerIcon","TextAlignJustifyIcon","BarChartIcon","MarginIcon","MinusIcon","DotIcon","DropdownMenuIcon","Text","jsxs","jsx","Fragment","createRoot","estimateBytesUsed","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","GLPerf","constructor","settings","names","finished","gl","extension","query","paused","queryHasResult","queryCreated","isWebGL2","memAccums","gpuAccums","activeAccums","chart","gpuChart","memChart","paramLogger","glFinish","chartLogger","chartLen","maxMemory","chartHz","chartFrame","gpuTimeProcess","chartTime","activeQueries","circularId","detected","frameId","rafId","checkQueryId","uuid","undefined","currentMem","paramFrame","paramTime","now","t0","window","assign","Array","fill","performance","Date","initGpu","is120hz","generateUUID","getExtension","n","loop","t","requestAnimationFrame","Math","ceil","cancelAnimationFrame","addUI","name","indexOf","nextFrame","duration","gpu","memory","jsHeapSizeLimit","frameCount","fps","round","usedJSHeapSize","mem","Promise","all","then","timespan","hz","memS","gpuS","data","startGpu","ext","available","disjoint","ns","getQueryParameter","QUERY_RESULT_AVAILABLE","getParameter","GPU_DISJOINT_EXT","QUERY_RESULT","ms","_active","createQuery","beginQuery","TIME_ELAPSED_EXT","endGpu","getQuery","CURRENT_QUERY","endQuery","begin","updateAccums","end","nameId","countGeoDrawCalls","programs","program","_pkey","meshes","drawCounts","total","type","mesh","geometry","material","index","position","attributes","rangeFactor","wireframe","dataCount","count","rangeStart","drawRange","start","rangeCount","drawStart","drawEnd","min","countInstanceRatio","instanceCount","mostDrawCalls","isMesh","isLine","isLineSegments","isLineLoop","isPoints","isSprite","drawCount","max","userData","updateMatrixWorldTemp","Object3D","prototype","updateMatrixWorld","updateWorldMatrixTemp","updateWorldMatrix","updateMatrixTemp","updateMatrix","matriceWorldCount","matriceCount","isUUID","s","match","addMuiPerfID","currentObjectWithMaterials","defines","muiPerf","needsUpdate","getMUIIndex","muid","usePerfStore","set","log","triggerProgramsUpdate","customData","objectWithMaterials","scene","Map","sceneLength","tab","setCustomData","setState","getCustomData","getState","usePerfFunc","_usePerfStore","state","info","Headless","trackCPU","deepAnalyze","matrixUpdate","PerfLib","trackGPU","getContext","logger","totalTime","callbacks","callbacksAfter","Scene","get","_callbacks$get","callback","_callbacksAfter$get","matrixWorldNeedsUpdate","autoReset","effectSub","afterEffectSub","preRafR3FPerf","reset","postRafR3FPerf","_gl$info","_gl$info$programs","traverse","deepAnalyzeR3FPerf","Mesh","Points","isTroika","isArray","cacheKeySplited","cacheKey","split","muiPerfTracker","findIndex","expand","visible","size","unsub","postRafTailR3FPerf","PerfS","top","right","zIndex","fontFamily","backgroundColor","color","margin","minHeight","padding","userSelect","left","bottom","border","fontSize","lineHeight","verticalAlign","PerfSmallI","PerfI","display","fontStyle","width","pointerEvents","cursor","fontWeight","letterSpacing","textAlign","height","whiteSpace","justifyContent","fontVariantNumeric","small","paddingLeft","svg","maxHeight","marginLeft","PerfB","PerfIContainer","ProgramHeader","marginBottom","marginRight","Graph","overflow","minWidth","canvas","background","Graphpc","alignItems","Toggle","marginTop","float","ToggleVisible","ProgramGeo","ProgramTitle","maxWidth","textOverflow","ContainerScroll","overflowY","ProgramsContainer","ProgramsULHeader","ProgramsUL","img","content","transform","li","borderBottom","b","ProgramConsole","ToggleContainer","ProgramsGeoLi","span","TextHighHZ","isPerf","isMemory","isShadersInfo","metric","offsetY","_offsetY","offsetX","hasInstance","w","h","viewport","fpsRef","fpsInstanceRef","updateR3FPerfText","current","text","render","infos","pow","toFixed","infosInstance","instance","infoInstance","y","matrixWorld","copy","matrix","fallback","children","matrixAutoUpdate","ref","characters","onUpdate","self","TextsHighHZ","colorBlind","minimal","colorsGraph","toString","custom","ChartCurve","_chart","curves","Float32Array","gpuRef","memRef","dummyVec3","Vector3","updatePoints","element","factor","maxVal","paddingTop","len","id","toArray","array","supportMemory","updateChartCurve","attach","itemSize","transparent","opacity","ChartUI","showGraph","_showGraph","antialias","_antialias","style","orthographic","dpr","alpha","stencil","depth","onCreated","matrixWorldAutoUpdate","flat","Renderer","updateR3FPerf","camera","matrixWorldInverse","invert","Infinity","_objectWithoutPropertiesLoose","excluded","sourceKeys","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","call","_excluded","Html","_ref","portal","className","props","group","rootRef","domElement","parentNode","el","document","createElement","root","appendChild","unmount","removeChild","addTextureUniforms","texture","repeatType","wrap","encodingType","encoding","url","image","currentSrc","wrapT","flipY","UniformsGL","setTexNumber","uniforms","getUniforms","TexCount","format","seq","e","includes","values","cache","v","substring","join","uniform","Texture","sb","JSON","stringify","_err","from","map","href","src","onClick","_material$uniforms$un","console","DynamicDrawCallInfo","getVal","res","triangles","lines","points","isFinite","ProgramUI","showProgram","setShowProgram","toggleProgram","texNumber","glslVersion","onPointerEnter","onPointerLeave","stopPropagation","ProgramsUI","colors","DynamicUI","calls","PerfUI","openByDefault","PerfThree","InfoUI","ToggleEl","title","tabStore","show","TabContainers","Gui","perfContainerRef","concat","Perf","headless","_headless","_colorBlind","_trackCPU","_deepAnalyze","_openByDefault","_matrixUpdate","_position","_minimal","usePerf"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/node_modules/r3f-perf/dist/r3f-perf.esm.js"],"sourcesContent":["import React, { useMemo, useEffect, memo, useRef, Suspense, useState, forwardRef, useLayoutEffect } from 'react';\nimport { useThree, addEffect, addAfterEffect, addTail, useFrame, Canvas } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { MathUtils } from 'three';\nimport create from 'zustand';\nimport { styled } from '@stitches/react';\nimport { PauseIcon, TriangleDownIcon, TriangleUpIcon, LayersIcon, ImageIcon, RocketIcon, EyeOpenIcon, EyeNoneIcon, ButtonIcon, CubeIcon, VercelLogoIcon, ActivityLogIcon, LightningBoltIcon, RulerHorizontalIcon, LapTimerIcon, TextAlignJustifyIcon, BarChartIcon, MarginIcon, MinusIcon, DotIcon, DropdownMenuIcon } from '@radix-ui/react-icons';\nimport { Text } from '@react-three/drei';\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { createRoot } from 'react-dom/client';\nimport { estimateBytesUsed } from 'three-stdlib';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass GLPerf {\n  constructor(settings = {}) {\n    this.names = [''];\n    this.finished = [];\n    this.gl = void 0;\n    this.extension = void 0;\n    this.query = void 0;\n    this.paused = false;\n    this.queryHasResult = false;\n    this.queryCreated = false;\n    this.isWebGL2 = true;\n    this.memAccums = [];\n    this.gpuAccums = [];\n    this.activeAccums = [];\n    this.chart = [];\n    this.gpuChart = [];\n    this.memChart = [];\n\n    this.paramLogger = () => {};\n\n    this.glFinish = () => {};\n\n    this.chartLogger = () => {};\n\n    this.chartLen = 60;\n    this.maxMemory = 1500;\n    this.chartHz = 10;\n    this.chartFrame = 0;\n    this.gpuTimeProcess = 0;\n    this.chartTime = 0;\n    this.activeQueries = 0;\n    this.circularId = 0;\n    this.detected = 0;\n    this.frameId = 0;\n    this.rafId = 0;\n    this.checkQueryId = 0;\n    this.uuid = undefined;\n    this.currentMem = 0;\n    this.paramFrame = 0;\n    this.paramTime = 0;\n\n    this.now = () => {};\n\n    this.t0 = 0;\n    window.GLPerf = window.GLPerf || {};\n    Object.assign(this, settings);\n    this.chart = new Array(this.chartLen).fill(0);\n    this.gpuChart = new Array(this.chartLen).fill(0);\n    this.memChart = new Array(this.chartLen).fill(0);\n\n    this.now = () => window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n    this.initGpu();\n    this.is120hz();\n  }\n\n  initGpu() {\n    this.uuid = MathUtils.generateUUID();\n\n    if (this.gl) {\n      this.isWebGL2 = true;\n\n      if (!this.extension) {\n        this.extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n      }\n\n      if (this.extension === null) {\n        this.isWebGL2 = false;\n      }\n    }\n  }\n\n  is120hz() {\n    let n = 0;\n\n    const loop = t => {\n      if (++n < 20) {\n        this.rafId = window.requestAnimationFrame(loop);\n      } else {\n        this.detected = Math.ceil(1e3 * n / (t - this.t0) / 70);\n        window.cancelAnimationFrame(this.rafId);\n      }\n\n      if (!this.t0) this.t0 = t;\n    };\n\n    this.rafId = window.requestAnimationFrame(loop);\n  }\n\n  addUI(name) {\n    if (this.names.indexOf(name) === -1) {\n      this.names.push(name);\n      this.gpuAccums.push(0);\n      this.activeAccums.push(false);\n    }\n  }\n\n  nextFrame(now) {\n    this.frameId++;\n    const t = now || this.now();\n    const duration = t - this.paramTime;\n    let gpu = 0;\n\n    if (this.frameId <= 1) {\n      this.paramFrame = this.frameId;\n      this.paramTime = t;\n    } else {\n      if (t >= this.paramTime + 200) {\n        this.maxMemory = window.performance.memory ? window.performance.memory.jsHeapSizeLimit / 1048576 : 0;\n        const frameCount = this.frameId - this.paramFrame;\n        const fps = frameCount * 1000 / duration;\n\n        for (let i = 0; i < this.names.length; i++) {\n          gpu = this.isWebGL2 ? this.gpuAccums[i] : this.gpuAccums[i] / duration;\n          this.currentMem = Math.round(window.performance && window.performance.memory ? window.performance.memory.usedJSHeapSize / 1048576 : 0);\n          this.paramLogger({\n            gpu,\n            i,\n            mem: this.currentMem,\n            maxMemory: this.maxMemory,\n            fps: fps,\n            duration: Math.round(duration),\n            frameCount\n          });\n\n          if (this.isWebGL2) {\n            this.gpuAccums[i] = 0;\n          } else {\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n        }\n\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      }\n    }\n\n    if (!this.detected || !this.chartFrame) {\n      this.chartFrame = this.frameId;\n      this.chartTime = t;\n      this.circularId = 0;\n    } else {\n      const timespan = t - this.chartTime;\n      let hz = this.chartHz * timespan / 1e3;\n\n      while (--hz > 0 && this.detected) {\n        const frameCount = this.frameId - this.chartFrame;\n        const fps = frameCount / timespan * 1e3;\n        this.chart[this.circularId % this.chartLen] = fps;\n        const memS = 1000 / this.currentMem;\n        const gpuS = (this.isWebGL2 ? this.gpuAccums[1] * 2 : Math.round(this.gpuAccums[1] / duration * 100)) + 4;\n\n        if (gpuS > 0) {\n          this.gpuChart[this.circularId % this.chartLen] = gpuS;\n        }\n\n        if (memS > 0) {\n          this.memChart[this.circularId % this.chartLen] = memS;\n        }\n\n        for (let i = 0; i < this.names.length; i++) {\n          this.chartLogger({\n            i,\n            data: {\n              fps: this.chart,\n              gpu: this.gpuChart,\n              mem: this.memChart\n            },\n            circularId: this.circularId\n          });\n        }\n\n        this.circularId++;\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n      }\n    }\n  }\n\n  startGpu() {\n    const gl = this.gl;\n    const ext = this.extension;\n    if (!gl || !ext) return;\n\n    if (this.isWebGL2) {\n      let available = false;\n      let disjoint, ns;\n\n      if (this.query) {\n        this.queryHasResult = false;\n        let query = this.query;\n        available = gl.getQueryParameter(query, gl.QUERY_RESULT_AVAILABLE);\n        disjoint = gl.getParameter(ext.GPU_DISJOINT_EXT);\n\n        if (available && !disjoint) {\n          ns = gl.getQueryParameter(this.query, gl.QUERY_RESULT);\n          const ms = ns * 1e-6;\n\n          if (available && ms > 0) {\n            if (!disjoint) {\n              this.activeAccums.forEach((_active, i) => {\n                this.gpuAccums[i] = ms;\n              });\n            }\n          }\n        }\n      }\n\n      if (available || !this.query) {\n        this.queryCreated = true;\n        this.query = gl.createQuery();\n        gl.beginQuery(ext.TIME_ELAPSED_EXT, this.query);\n      }\n    }\n  }\n\n  endGpu() {\n    const ext = this.extension;\n    const gl = this.gl;\n\n    if (this.isWebGL2 && this.queryCreated && gl.getQuery(ext.TIME_ELAPSED_EXT, gl.CURRENT_QUERY)) {\n      gl.endQuery(ext.TIME_ELAPSED_EXT);\n    }\n  }\n\n  begin(name) {\n    this.startGpu();\n    this.updateAccums(name);\n  }\n\n  end(name) {\n    this.endGpu();\n    this.updateAccums(name);\n  }\n\n  updateAccums(name) {\n    let nameId = this.names.indexOf(name);\n\n    if (nameId === -1) {\n      nameId = this.names.length;\n      this.addUI(name);\n    }\n\n    const t = this.now();\n    this.activeAccums[nameId] = !this.activeAccums[nameId];\n    this.t0 = t;\n  }\n\n}\n\nconst countGeoDrawCalls = programs => {\n  programs.forEach((program, _pkey) => {\n    const {\n      meshes\n    } = program;\n\n    if (!meshes) {\n      return;\n    }\n\n    let drawCounts = {\n      total: 0,\n      type: 'Triangle',\n      data: []\n    };\n    Object.keys(meshes).forEach(key => {\n      const mesh = meshes[key];\n      const {\n        geometry,\n        material\n      } = mesh;\n      let index = geometry.index;\n      const position = geometry.attributes.position;\n      if (!position) return;\n      let rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        rangeFactor = 0;\n      }\n\n      const dataCount = index !== null ? index.count : position.count;\n      const rangeStart = geometry.drawRange.start * rangeFactor;\n      const rangeCount = geometry.drawRange.count * rangeFactor;\n      const drawStart = rangeStart;\n      const drawEnd = Math.min(dataCount, rangeStart + rangeCount) - 1;\n      let countInstanceRatio = 1;\n      const instanceCount = mesh.count || 1;\n      let type = 'Triangle';\n      let mostDrawCalls = 0;\n\n      if (mesh.isMesh) {\n        if (material.wireframe === true) {\n          type = 'Line';\n          countInstanceRatio = countInstanceRatio / 2;\n        } else {\n          type = 'Triangle';\n          countInstanceRatio = countInstanceRatio / 3;\n        }\n      } else if (mesh.isLine) {\n        type = 'Line';\n\n        if (mesh.isLineSegments) {\n          countInstanceRatio = countInstanceRatio / 2;\n        } else if (mesh.isLineLoop) {\n          countInstanceRatio = countInstanceRatio;\n        } else {\n          countInstanceRatio = countInstanceRatio - 1;\n        }\n      } else if (mesh.isPoints) {\n        type = 'Point';\n        countInstanceRatio = countInstanceRatio;\n      } else if (mesh.isSprite) {\n        type = 'Triangle';\n        countInstanceRatio = countInstanceRatio / 3;\n      }\n\n      const drawCount = Math.round(Math.max(0, drawEnd - drawStart + 1) * (countInstanceRatio * instanceCount));\n\n      if (drawCount > mostDrawCalls) {\n        mostDrawCalls = drawCount;\n        drawCounts.type = type;\n      }\n\n      drawCounts.total += drawCount;\n      drawCounts.data.push({\n        drawCount,\n        type\n      });\n      mesh.userData.drawCount = {\n        type,\n        count: drawCount\n      };\n    });\n    program.drawCounts = drawCounts;\n  });\n};\n\nconst updateMatrixWorldTemp = THREE.Object3D.prototype.updateMatrixWorld;\nconst updateWorldMatrixTemp = THREE.Object3D.prototype.updateWorldMatrix;\nconst updateMatrixTemp = THREE.Object3D.prototype.updateMatrix;\nlet matriceWorldCount = {\n  value: 0\n};\nlet matriceCount = {\n  value: 0\n};\n\nconst isUUID = uuid => {\n  let s = '' + uuid;\n  s = s.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$');\n\n  if (s === null) {\n    return false;\n  }\n\n  return true;\n};\n\nconst addMuiPerfID = (material, currentObjectWithMaterials) => {\n  if (!material.defines) {\n    material.defines = {};\n  }\n\n  if (material.defines && !material.defines.muiPerf) {\n    material.defines = Object.assign(material.defines || {}, {\n      muiPerf: material.uuid\n    });\n  }\n\n  const uuid = material.uuid;\n\n  if (!currentObjectWithMaterials[uuid]) {\n    currentObjectWithMaterials[uuid] = {\n      meshes: {},\n      material: material\n    };\n    material.needsUpdate = true;\n  }\n\n  material.needsUpdate = false;\n  return uuid;\n};\n\nconst getMUIIndex = muid => muid === 'muiPerf';\n\nconst usePerfStore = create(set => ({\n  log: null,\n  paused: false,\n  triggerProgramsUpdate: 0,\n  customData: 0,\n  chart: {\n    data: {\n      fps: [],\n      gpu: [],\n      mem: []\n    },\n    circularId: 0\n  },\n  gl: undefined,\n  objectWithMaterials: null,\n  scene: undefined,\n  programs: new Map(),\n  sceneLength: undefined,\n  tab: 'infos'\n}));\nconst setCustomData = customData => {\n  usePerfStore.setState({\n    customData\n  });\n};\nconst getCustomData = () => {\n  return usePerfStore.getState().customData;\n};\nconst usePerfFunc = () => {\n  var _usePerfStore;\n\n  return {\n    log: usePerfStore(state => state.log),\n    gl: (_usePerfStore = usePerfStore(state => state.gl)) === null || _usePerfStore === void 0 ? void 0 : _usePerfStore.info,\n    programs: usePerfStore(state => state.programs)\n  };\n};\nconst Headless = ({\n  trackCPU,\n  chart,\n  deepAnalyze,\n  matrixUpdate\n}) => {\n  const {\n    gl,\n    scene\n  } = useThree();\n  usePerfStore.setState({\n    gl,\n    scene\n  });\n  const PerfLib = useMemo(() => {\n    const PerfLib = new GLPerf({\n      trackGPU: true,\n      chartLen: chart ? chart.length : 120,\n      chartHz: chart ? chart.hz : 60,\n      gl: gl.getContext(),\n      chartLogger: chart => {\n        usePerfStore.setState({\n          chart\n        });\n      },\n      paramLogger: logger => {\n        usePerfStore.setState({\n          log: {\n            maxMemory: logger.maxMemory,\n            gpu: logger.gpu,\n            mem: logger.mem,\n            fps: logger.fps,\n            totalTime: logger.duration,\n            frameCount: logger.frameCount\n          }\n        });\n      }\n    });\n    const callbacks = new Map();\n    const callbacksAfter = new Map();\n    Object.defineProperty(THREE.Scene.prototype, 'onBeforeRender', {\n      get() {\n        return (...args) => {\n          var _callbacks$get;\n\n          if (PerfLib) {\n            PerfLib.begin('profiler');\n          }\n\n          (_callbacks$get = callbacks.get(this)) === null || _callbacks$get === void 0 ? void 0 : _callbacks$get(...args);\n        };\n      },\n\n      set(callback) {\n        callbacks.set(this, callback);\n      },\n\n      configurable: true\n    });\n    Object.defineProperty(THREE.Scene.prototype, 'onAfterRender', {\n      get() {\n        return (...args) => {\n          var _callbacksAfter$get;\n\n          if (PerfLib) {\n            PerfLib.end('profiler');\n          }\n\n          (_callbacksAfter$get = callbacksAfter.get(this)) === null || _callbacksAfter$get === void 0 ? void 0 : _callbacksAfter$get(...args);\n        };\n      },\n\n      set(callback) {\n        callbacksAfter.set(this, callback);\n      },\n\n      configurable: true\n    });\n    return PerfLib;\n  }, []);\n  useEffect(() => {\n    if (matrixUpdate) {\n      THREE.Object3D.prototype.updateMatrixWorld = function () {\n        if (this.matrixWorldNeedsUpdate || arguments[0]) {\n          matriceWorldCount.value++;\n        }\n\n        updateMatrixWorldTemp.apply(this, arguments);\n      };\n\n      THREE.Object3D.prototype.updateWorldMatrix = function () {\n        matriceWorldCount.value++;\n        updateWorldMatrixTemp.apply(this, arguments);\n      };\n\n      THREE.Object3D.prototype.updateMatrix = function () {\n        matriceCount.value++;\n        updateMatrixTemp.apply(this, arguments);\n      };\n    }\n\n    gl.info.autoReset = false;\n    let effectSub = null;\n    let afterEffectSub = null;\n    if (!gl.info) return;\n    effectSub = addEffect(function preRafR3FPerf() {\n      if (usePerfStore.getState().paused) {\n        usePerfStore.setState({\n          paused: false\n        });\n      }\n\n      matriceCount.value -= 1;\n      matriceWorldCount.value = 0;\n      matriceCount.value = 0;\n\n      if (gl.info) {\n        gl.info.reset();\n      }\n    });\n    afterEffectSub = addAfterEffect(function postRafR3FPerf() {\n      if (PerfLib && !PerfLib.paused) {\n        PerfLib.nextFrame(window.performance.now());\n      }\n\n      if (deepAnalyze) {\n        var _gl$info, _gl$info$programs;\n\n        const currentObjectWithMaterials = {};\n        const programs = new Map();\n        scene.traverse(function deepAnalyzeR3FPerf(object) {\n          if (object instanceof THREE.Mesh || object instanceof THREE.Points) {\n            if (object.material) {\n              let uuid = object.material.uuid;\n              const isTroika = Array.isArray(object.material) && object.material.length > 1;\n\n              if (isTroika) {\n                uuid = addMuiPerfID(object.material[1], currentObjectWithMaterials);\n              } else {\n                uuid = addMuiPerfID(object.material, currentObjectWithMaterials);\n              }\n\n              currentObjectWithMaterials[uuid].meshes[object.uuid] = object;\n            }\n          }\n        });\n        gl === null || gl === void 0 ? void 0 : (_gl$info = gl.info) === null || _gl$info === void 0 ? void 0 : (_gl$info$programs = _gl$info.programs) === null || _gl$info$programs === void 0 ? void 0 : _gl$info$programs.forEach(program => {\n          const cacheKeySplited = program.cacheKey.split(',');\n          const muiPerfTracker = cacheKeySplited[cacheKeySplited.findIndex(getMUIIndex) + 1];\n\n          if (isUUID(muiPerfTracker) && currentObjectWithMaterials[muiPerfTracker]) {\n            const {\n              material,\n              meshes\n            } = currentObjectWithMaterials[muiPerfTracker];\n            programs.set(muiPerfTracker, {\n              program,\n              material,\n              meshes,\n              drawCounts: {\n                total: 0,\n                type: 'triangle',\n                data: []\n              },\n              expand: false,\n              visible: true\n            });\n          }\n        });\n\n        if (programs.size !== usePerfStore.getState().programs.size) {\n          countGeoDrawCalls(programs);\n          usePerfStore.setState({\n            programs: programs,\n            triggerProgramsUpdate: usePerfStore.getState().triggerProgramsUpdate++\n          });\n        }\n      }\n    });\n    return () => {\n      if (PerfLib) {\n        window.cancelAnimationFrame(PerfLib.rafId);\n        window.cancelAnimationFrame(PerfLib.checkQueryId);\n      }\n\n      if (matrixUpdate) {\n        THREE.Object3D.prototype.updateMatrixWorld = updateMatrixTemp;\n      }\n\n      effectSub();\n      afterEffectSub();\n    };\n  }, [PerfLib, gl, trackCPU, chart, matrixUpdate]);\n  useEffect(() => {\n    const unsub = addTail(function postRafTailR3FPerf() {\n      if (PerfLib) {\n        PerfLib.paused = true;\n        matriceCount.value = 0;\n        matriceWorldCount.value = 0;\n        usePerfStore.setState({\n          paused: true,\n          log: {\n            maxMemory: 0,\n            gpu: 0,\n            mem: 0,\n            fps: 0,\n            totalTime: 0,\n            frameCount: 0\n          }\n        });\n      }\n\n      return false;\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n  return null;\n};\n\nconst PerfS = styled('div', {\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  zIndex: 9999,\n  fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif`,\n  backgroundColor: 'rgba(36, 36, 36, .9)',\n  color: '#fff',\n  margin: 0,\n  minHeight: '100px',\n  padding: '4px 0',\n  '-webkit-font-smoothing': 'antialiased',\n  '-moz-osx-font-smoothing': 'grayscale',\n  userSelect: 'none',\n  '&.top-left': {\n    right: 'initial',\n    left: 0\n  },\n  '&.bottom-left': {\n    right: 'initial',\n    top: 'initial',\n    bottom: 0,\n    left: 0,\n    '.__perf_toggle': {\n      top: '-20px',\n      bottom: 'initial'\n    }\n  },\n  '&.bottom-right': {\n    top: 'initial',\n    bottom: 0,\n    '.__perf_toggle': {\n      top: '-20px',\n      bottom: 'initial'\n    }\n  },\n  '&.minimal': {\n    backgroundColor: 'rgba(36, 36, 36, .75)'\n  },\n  '*': {\n    margin: '0',\n    padding: '0',\n    border: '0',\n    fontSize: '100%',\n    lineHeight: '1',\n    verticalAlign: 'baseline'\n  }\n});\nconst PerfSmallI = styled('small', {\n  position: 'absolute',\n  right: 0,\n  fontSize: '10px'\n});\nconst PerfI = styled('div', {\n  display: 'inline-flex',\n  fontStyle: 'normal',\n  padding: 0,\n  lineHeight: '13px',\n  fontSize: '14px',\n  width: '62px',\n  position: 'relative',\n  pointerEvents: 'auto',\n  cursor: 'default',\n  fontWeight: 500,\n  letterSpacing: '0px',\n  textAlign: 'left',\n  height: '29px',\n  whiteSpace: 'nowrap',\n  justifyContent: 'space-evenly',\n  fontVariantNumeric: 'tabular-nums',\n  small: {\n    paddingLeft: '12px'\n  },\n  svg: {\n    padding: 0,\n    color: 'rgba(145, 145, 145, 0.3)',\n    fontSize: '40px',\n    position: 'absolute',\n    zIndex: 1,\n    maxHeight: '20px',\n    left: ' 50%',\n    marginLeft: '-23px',\n    top: '4px'\n  }\n});\nconst PerfB = styled('span', {\n  verticalAlign: 'bottom',\n  position: 'absolute',\n  bottom: '5px',\n  color: 'rgba(101, 197, 188, 1)',\n  textAlign: 'right',\n  letterSpacing: '1px',\n  fontSize: '8px',\n  fontWeight: '500',\n  width: '60px'\n});\nconst PerfIContainer = styled('div', {\n  display: 'flex'\n});\nconst ProgramHeader = styled('div', {\n  backgroundColor: '#404040',\n  padding: '6px',\n  display: 'block',\n  fontSize: '12px',\n  marginBottom: '6px',\n  cursor: 'pointer',\n  '*': {\n    cursor: 'pointer !important'\n  },\n  '> span': {},\n  small: {\n    fontSize: '9px'\n  },\n  '> b': {\n    marginRight: '4px',\n    cursor: 'pointer'\n  }\n});\nconst Graph = styled('div', {\n  height: '66px',\n  overflow: 'hidden',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  top: '0px',\n  justifyContent: 'center',\n  width: '100%',\n  minWidth: '310px',\n  margin: '0 auto',\n  canvas: {\n    background: 'transparent !important',\n    position: 'absolute !important'\n  }\n});\nconst Graphpc = styled('div', {\n  textAlign: 'center',\n  fontWeight: 700,\n  fontSize: '12px',\n  lineHeight: '12px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  verticalAlign: 'middle',\n  color: '#f1f1f1',\n  padding: '7px',\n  width: '100%',\n  backgroundColor: 'rgba(36, 36, 37, 0.8)',\n  zIndex: 1,\n  position: 'absolute',\n  height: '100%'\n});\nconst Toggle = styled('div', {\n  pointerEvents: 'auto',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  backgroundColor: 'rgb(41, 43, 45)',\n  marginTop: '6px',\n  width: 'auto',\n  margin: '0',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  padding: '4px 6px',\n  '&.__perf_toggle_tab_active': {\n    backgroundColor: 'rgb(31 31 31)'\n  },\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left'\n  }\n});\nconst ToggleVisible = styled('div', {\n  pointerEvents: 'auto',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  float: 'right',\n  backgroundColor: 'rgb(41, 43, 45)',\n  width: 'auto',\n  margin: '0',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  padding: '4px 6px',\n  '&.__perf_toggle_tab_active': {\n    backgroundColor: 'rgb(31 31 31)'\n  },\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left'\n  }\n});\nconst ProgramGeo = styled('div', {\n  padding: '4px 6px',\n  fontSize: '12px',\n  pointerEvents: 'auto'\n});\nconst ProgramTitle = styled('span', {\n  fontWeight: 'bold',\n  letterSpacing: '0.08em',\n  maxWidth: '145px',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  fontSize: '11px',\n  marginRight: '10px'\n});\nconst ContainerScroll = styled('div', {\n  maxHeight: '50vh',\n  overflowY: 'auto',\n  marginTop: '38px'\n});\nconst ProgramsContainer = styled('div', {\n  marginTop: '0'\n});\nconst ProgramsULHeader = styled('div', {\n  display: 'flex',\n  position: 'relative',\n  fontWeight: 'bold',\n  color: '#fff',\n  lineHeight: '14px',\n  svg: {\n    marginRight: '4px',\n    display: 'inline-block'\n  }\n});\nconst ProgramsUL = styled('ul', {\n  display: 'block',\n  position: 'relative',\n  paddingLeft: '10px',\n  margin: '6px 6px',\n  img: {\n    maxHeight: '60px',\n    maxWidth: '100%',\n    margin: '6px auto',\n    display: 'block'\n  },\n  '&:after': {\n    content: '',\n    position: 'absolute',\n    left: '0px',\n    top: '0px',\n    width: '1px',\n    height: '100%',\n    backgroundColor: 'grey',\n    transform: 'translateX(-50%)',\n    maxHeight: '50vh',\n    overflowY: 'auto'\n  },\n  li: {\n    borderBottom: '1px solid #313131',\n    display: 'block',\n    padding: '4px',\n    margin: 0,\n    lineHeight: 1,\n    verticalAlign: 'middle',\n    height: '24px'\n  },\n  b: {\n    fontWeight: 'bold'\n  },\n  small: {\n    textAlign: 'revert',\n    letterSpacing: '1px',\n    fontSize: '10px',\n    fontWeight: '500',\n    marginLeft: '2px',\n    color: 'rgb(101, 197, 188)'\n  }\n});\nconst ProgramConsole = styled('button', {\n  fontWeight: 'bold',\n  letterSpacing: '0.02em',\n  backgroundColor: 'rgb(41, 43, 45)',\n  color: 'rgb(211, 211, 211)',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  cursor: 'pointer',\n  display: 'block',\n  verticalAlign: 'middle',\n  fontSize: '11px',\n  padding: '5px',\n  margin: '4px auto'\n});\nconst ToggleContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  backgroundColor: 'rgb(41, 43, 45)',\n  marginTop: '6px',\n  width: 'auto',\n  margin: '0 auto',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  position: 'absolute',\n  right: 0,\n  bottom: ' -20px',\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left'\n  }\n});\nconst ProgramsGeoLi = styled('li', {\n  display: 'flex !important',\n  height: 'auto !important',\n  span: {\n    height: '40px',\n    display: 'block',\n    position: 'relative'\n  },\n  b: {\n    paddingLeft: '12px'\n  }\n});\n\nconst TextHighHZ = memo(({\n  isPerf,\n  color,\n  customData,\n  isMemory,\n  isShadersInfo,\n  metric,\n  fontSize,\n  offsetY: _offsetY = 0,\n  offsetX,\n  round,\n  hasInstance\n}) => {\n  const {\n    width: w,\n    height: h\n  } = useThree(s => s.viewport);\n  const fpsRef = useRef(null);\n  const fpsInstanceRef = useRef(null);\n  useFrame(function updateR3FPerfText() {\n    const gl = usePerfStore.getState().gl;\n    const log = usePerfStore.getState().log;\n    if (!log || !fpsRef.current) return;\n\n    if (customData) {\n      fpsRef.current.text = usePerfStore.getState().customData;\n    }\n\n    if (!metric) return;\n    let info = log[metric];\n\n    if (isShadersInfo) {\n      var _gl$info$programs;\n\n      info = (_gl$info$programs = gl.info.programs) === null || _gl$info$programs === void 0 ? void 0 : _gl$info$programs.length;\n    } else if (metric === 'matriceCount') {\n      info = matriceCount.value;\n    } else if (!isPerf && gl.info.render) {\n      const infos = isMemory ? gl.info.memory : gl.info.render;\n      info = infos[metric];\n    }\n\n    fpsRef.current.text = (metric === 'maxMemory' ? '/' : '') + (Math.round(info * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round);\n\n    if (hasInstance) {\n      const infosInstance = gl.info.instance;\n\n      if (typeof infosInstance === 'undefined' && metric !== 'matriceCount') {\n        return;\n      }\n\n      let infoInstance;\n\n      if (metric === 'matriceCount') {\n        infoInstance = matriceWorldCount.value;\n      } else {\n        infoInstance = infosInstance[metric];\n      }\n\n      if (infoInstance > 0) {\n        fpsRef.current.fontSize = fontSize / 1.15;\n        fpsInstanceRef.current.fontSize = info > 0 ? fontSize / 1.4 : fontSize;\n        fpsRef.current.position.y = h / 2 - _offsetY - fontSize / 1.9;\n        fpsInstanceRef.current.text = ' ±\t' + (Math.round(infoInstance * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round);\n      } else {\n        fpsRef.current.position.y = h / 2 - _offsetY - fontSize;\n        fpsRef.current.fontSize = fontSize;\n      }\n    }\n\n    matriceCount.value -= 1;\n    fpsRef.current.updateMatrix();\n    fpsRef.current.matrixWorld.copy(fpsRef.current.matrix);\n  });\n  return jsxs(Suspense, {\n    fallback: null,\n    children: [jsx(Text, {\n      textAlign: \"justify\",\n      matrixAutoUpdate: false,\n      ref: fpsRef,\n      fontSize: fontSize,\n      position: [-w / 2 + offsetX + fontSize, h / 2 - _offsetY - fontSize, 0],\n      color: color,\n      characters: \"0123456789\",\n      onUpdate: self => {\n        self.updateMatrix();\n        matriceCount.value -= 1;\n        self.matrixWorld.copy(self.matrix);\n      },\n      children: \"0\"\n    }), hasInstance && jsx(Text, {\n      textAlign: \"justify\",\n      matrixAutoUpdate: false,\n      ref: fpsInstanceRef,\n      fontSize: 8,\n      position: [-w / 2 + offsetX + fontSize, h / 2 - _offsetY - fontSize * 1.15, 0],\n      color: 'lightgrey',\n      characters: \"0123456789\",\n      onUpdate: self => {\n        self.updateMatrix();\n        matriceCount.value -= 1;\n        self.matrixWorld.copy(self.matrix);\n      }\n    })]\n  });\n});\n\nconst TextsHighHZ = ({\n  colorBlind,\n  customData,\n  minimal,\n  matrixUpdate\n}) => {\n  const fontSize = 14;\n  return jsxs(Fragment, {\n    children: [jsx(TextHighHZ, {\n      color: `rgb(${colorsGraph(colorBlind).fps.toString()})`,\n      isPerf: true,\n      metric: \"fps\",\n      fontSize: fontSize,\n      offsetX: 140,\n      round: 0\n    }), jsx(TextHighHZ, {\n      color: '',\n      isPerf: true,\n      metric: \"mem\",\n      fontSize: fontSize,\n      offsetX: 80,\n      round: 0\n    }), jsx(TextHighHZ, {\n      color: '',\n      isPerf: true,\n      metric: \"maxMemory\",\n      fontSize: 8,\n      offsetX: 112,\n      offsetY: 10,\n      round: 0\n    }), jsx(TextHighHZ, {\n      color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,\n      isPerf: true,\n      metric: \"gpu\",\n      fontSize: fontSize,\n      offsetX: 10,\n      round: 3\n    }), !minimal ? jsxs(Fragment, {\n      children: [jsx(TextHighHZ, {\n        metric: \"calls\",\n        fontSize: fontSize,\n        offsetX: 200,\n        round: 0,\n        hasInstance: true\n      }), jsx(TextHighHZ, {\n        metric: \"triangles\",\n        fontSize: fontSize,\n        offsetX: 260,\n        round: 0,\n        hasInstance: true\n      }), jsx(TextHighHZ, {\n        isMemory: true,\n        metric: \"geometries\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 0,\n        round: 0\n      }), jsx(TextHighHZ, {\n        isMemory: true,\n        metric: \"textures\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 80,\n        round: 0\n      }), jsx(TextHighHZ, {\n        isShadersInfo: true,\n        metric: \"programs\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 140,\n        round: 0\n      }), jsx(TextHighHZ, {\n        metric: \"lines\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 200,\n        round: 0,\n        hasInstance: true\n      }), jsx(TextHighHZ, {\n        metric: \"points\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 260,\n        round: 0,\n        hasInstance: true\n      }), matrixUpdate && jsx(TextHighHZ, {\n        isPerf: true,\n        metric: \"matriceCount\",\n        fontSize: fontSize,\n        offsetY: 30,\n        offsetX: 320,\n        round: 0,\n        hasInstance: true\n      })]\n    }) : null, customData && jsx(TextHighHZ, {\n      color: `rgb(${colorsGraph(colorBlind).custom.toString()})`,\n      customData: customData,\n      fontSize: fontSize,\n      offsetY: 0,\n      offsetX: minimal ? 200 : 320,\n      round: 0\n    })]\n  });\n};\n\nconst ChartCurve = ({\n  colorBlind,\n  minimal,\n  chart: _chart = {\n    length: 30,\n    hz: 15\n  }\n}) => {\n  const curves = useMemo(() => {\n    return {\n      fps: new Float32Array(_chart.length * 3),\n      mem: new Float32Array(_chart.length * 3),\n      gpu: new Float32Array(_chart.length * 3)\n    };\n  }, [_chart]);\n  const fpsRef = useRef(null);\n  const gpuRef = useRef(null);\n  const memRef = useRef(null);\n  const dummyVec3 = useMemo(() => new THREE.Vector3(0, 0, 0), []);\n\n  const updatePoints = (element, factor = 1, ref, viewport) => {\n    let maxVal = 0;\n    const {\n      width: w,\n      height: h\n    } = viewport;\n    const chart = usePerfStore.getState().chart.data[element];\n\n    if (!chart || chart.length === 0) {\n      return;\n    }\n\n    const padding = minimal ? 2 : 6;\n    const paddingTop = minimal ? 12 : 50;\n    let len = chart.length;\n\n    for (let i = 0; i < len; i++) {\n      let id = (usePerfStore.getState().chart.circularId + i + 1) % len;\n\n      if (chart[id] !== undefined) {\n        if (chart[id] > maxVal) {\n          maxVal = chart[id] * factor;\n        }\n\n        dummyVec3.set(padding + i / (len - 1) * (w - padding * 2) - w / 2, Math.min(100, chart[id]) * factor / 100 * (h - padding * 2 - paddingTop) - h / 2, 0);\n        dummyVec3.toArray(ref.attributes.position.array, i * 3);\n      }\n    }\n\n    ref.attributes.position.needsUpdate = true;\n  };\n\n  const [supportMemory] = useState(window.performance.memory);\n  useFrame(function updateChartCurve({\n    viewport\n  }) {\n    updatePoints('fps', 1, fpsRef.current, viewport);\n    updatePoints('gpu', 5, gpuRef.current, viewport);\n\n    if (supportMemory) {\n      updatePoints('mem', 1, memRef.current, viewport);\n    }\n  });\n  return jsxs(Fragment, {\n    children: [jsxs(\"line\", {\n      children: [jsx(\"bufferGeometry\", {\n        ref: fpsRef,\n        children: jsx(\"bufferAttribute\", {\n          attach: 'attributes-position',\n          count: _chart.length,\n          array: curves.fps,\n          itemSize: 3,\n          needsUpdate: true\n        })\n      }), jsx(\"lineBasicMaterial\", {\n        color: `rgb(${colorsGraph(colorBlind).fps.toString()})`,\n        transparent: true,\n        opacity: 0.5\n      })]\n    }), jsxs(\"line\", {\n      children: [jsx(\"bufferGeometry\", {\n        ref: gpuRef,\n        children: jsx(\"bufferAttribute\", {\n          attach: 'attributes-position',\n          count: _chart.length,\n          array: curves.gpu,\n          itemSize: 3,\n          needsUpdate: true\n        })\n      }), jsx(\"lineBasicMaterial\", {\n        color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,\n        transparent: true,\n        opacity: 0.5\n      })]\n    }), supportMemory && jsxs(\"line\", {\n      children: [jsx(\"bufferGeometry\", {\n        ref: memRef,\n        children: jsx(\"bufferAttribute\", {\n          attach: 'attributes-position',\n          count: _chart.length,\n          array: curves.mem,\n          itemSize: 3,\n          needsUpdate: true\n        })\n      }), jsx(\"lineBasicMaterial\", {\n        color: `rgb(${colorsGraph(colorBlind).mem.toString()})`,\n        transparent: true,\n        opacity: 0.5\n      })]\n    })]\n  });\n};\n\nconst ChartUI = ({\n  colorBlind,\n  chart,\n  customData,\n  matrixUpdate,\n  showGraph: _showGraph = true,\n  antialias: _antialias = true,\n  minimal\n}) => {\n  const canvas = useRef(undefined);\n  const paused = usePerfStore(state => state.paused);\n  return jsxs(Graph, {\n    style: {\n      display: 'flex',\n      position: 'absolute',\n      height: `${minimal ? 37 : _showGraph ? 100 : 60}px`,\n      minWidth: `${minimal ? '100px' : customData ? '370px' : '310px'}`\n    },\n    children: [jsx(Canvas, {\n      ref: canvas,\n      orthographic: true,\n      dpr: _antialias ? [1, 2] : 1,\n      gl: {\n        antialias: true,\n        alpha: true,\n        stencil: false,\n        depth: false\n      },\n      onCreated: ({\n        scene\n      }) => {\n        scene.traverse(obj => {\n          obj.matrixWorldAutoUpdate = false;\n          obj.matrixAutoUpdate = false;\n        });\n      },\n      flat: true,\n      style: {\n        marginBottom: `-42px`,\n        position: 'relative',\n        pointerEvents: 'none',\n        background: 'transparent !important',\n        height: `${minimal ? 37 : _showGraph ? 100 : 60}px`\n      },\n      children: !paused ? jsxs(Fragment, {\n        children: [jsx(Renderer, {}), jsx(TextsHighHZ, {\n          customData: customData,\n          minimal: minimal,\n          matrixUpdate: matrixUpdate\n        }), _showGraph && jsx(ChartCurve, {\n          colorBlind: colorBlind,\n          minimal: minimal,\n          chart: chart\n        })]\n      }) : null\n    }), paused && jsxs(Graphpc, {\n      children: [jsx(PauseIcon, {}), \" PAUSED\"]\n    })]\n  });\n};\n\nconst Renderer = () => {\n  useFrame(function updateR3FPerf({\n    gl,\n    scene,\n    camera\n  }) {\n    camera.updateMatrix();\n    matriceCount.value -= 1;\n    camera.matrixWorld.copy(camera.matrix);\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    gl.render(scene, camera);\n    matriceWorldCount.value = 0;\n    matriceCount.value = 0;\n  }, Infinity);\n  return null;\n};\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst _excluded = [\"portal\", \"className\", \"children\"];\nconst Html = forwardRef((_ref, ref) => {\n  let {\n    portal,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const gl = useThree(state => state.gl);\n  const group = useRef(null);\n  const rootRef = useRef(null);\n  const target = (portal === null || portal === void 0 ? void 0 : portal.current) != null ? portal.current : gl.domElement.parentNode;\n  useLayoutEffect(() => {\n    if (!group.current || !target) return;\n    const el = document.createElement('div');\n    const root = rootRef.current = createRoot(el);\n    target.appendChild(el);\n    return () => {\n      root.unmount();\n      rootRef.current = null;\n      target.removeChild(el);\n    };\n  }, [target]);\n  useLayoutEffect(() => {\n    const root = rootRef.current;\n    if (!root) return;\n    root.render(jsx(\"div\", {\n      ref: ref,\n      className: className,\n      children: children\n    }));\n  });\n  return jsx(\"group\", _objectSpread2(_objectSpread2({}, props), {}, {\n    ref: group\n  }));\n});\n\nconst addTextureUniforms = (id, texture) => {\n  const repeatType = wrap => {\n    switch (wrap) {\n      case 1000:\n        return 'RepeatWrapping';\n\n      case 1001:\n        return 'ClampToEdgeWrapping';\n\n      case 1002:\n        return 'MirroredRepeatWrapping';\n\n      default:\n        return 'ClampToEdgeWrapping';\n    }\n  };\n\n  const encodingType = encoding => {\n    switch (encoding) {\n      case 3000:\n        return 'LinearEncoding';\n\n      case 3001:\n        return 'sRGBEncoding';\n\n      case 3002:\n        return 'RGBEEncoding';\n\n      case 3003:\n        return 'LogLuvEncoding';\n\n      case 3004:\n        return 'RGBM7Encoding';\n\n      case 3005:\n        return 'RGBM16Encoding';\n\n      case 3006:\n        return 'RGBDEncoding';\n\n      case 3007:\n        return 'GammaEncoding';\n\n      default:\n        return 'ClampToEdgeWrapping';\n    }\n  };\n\n  return {\n    name: id,\n    url: texture.image.currentSrc,\n    encoding: encodingType(texture.encoding),\n    wrapT: repeatType(texture.image.wrapT),\n    flipY: texture.flipY.toString()\n  };\n};\n\nconst UniformsGL = ({\n  program,\n  material,\n  setTexNumber\n}) => {\n  const gl = usePerfStore(state => state.gl);\n  const [uniforms, set] = useState(null);\n  useEffect(() => {\n    if (gl) {\n      const data = program === null || program === void 0 ? void 0 : program.getUniforms();\n      let TexCount = 0;\n      const format = new Map();\n      data.seq.forEach(e => {\n        if (!e.id.includes('uTroika') && e.id !== 'isOrthographic' && e.id !== 'uvTransform' && e.id !== 'lightProbe' && e.id !== 'projectionMatrix' && e.id !== 'viewMatrix' && e.id !== 'normalMatrix' && e.id !== 'modelMatrix' && e.id !== 'modelViewMatrix') {\n          let values = [];\n          let data = {\n            name: e.id\n          };\n\n          if (e.cache) {\n            e.cache.forEach(v => {\n              if (typeof v !== 'undefined') {\n                values.push(v.toString().substring(0, 4));\n              }\n            });\n            data.value = values.join();\n\n            if (material[e.id] && material[e.id].image) {\n              if (material[e.id].image) {\n                TexCount++;\n                data.value = addTextureUniforms(e.id, material[e.id]);\n              }\n            }\n\n            if (!data.value) {\n              data.value = 'empty';\n            }\n\n            format.set(e.id, data);\n          }\n        }\n      });\n\n      if (material.uniforms) {\n        Object.keys(material.uniforms).forEach(key => {\n          const uniform = material.uniforms[key];\n\n          if (uniform.value) {\n            const {\n              value\n            } = uniform;\n            let data = {\n              name: key\n            };\n\n            if (key.includes('uTroika')) {\n              return;\n            }\n\n            if (value instanceof THREE.Texture) {\n              TexCount++;\n              data.value = addTextureUniforms(key, value);\n            } else {\n              let sb = JSON.stringify(value);\n\n              try {\n                sb = JSON.stringify(value);\n              } catch (_err) {\n                sb = value.toString();\n              }\n\n              data.value = sb;\n            }\n\n            format.set(key, data);\n          }\n        });\n      }\n\n      if (TexCount > 0) {\n        setTexNumber(TexCount);\n      }\n\n      set(format);\n    }\n  }, []);\n  return jsx(ProgramsUL, {\n    children: uniforms && Array.from(uniforms.values()).map(uniform => {\n      return jsx(\"span\", {\n        children: typeof uniform.value === 'string' ? jsx(\"li\", {\n          children: jsxs(\"span\", {\n            children: [uniform.name, \" :\", ' ', jsxs(\"b\", {\n              children: [uniform.value.substring(0, 30), uniform.value.length > 30 ? '...' : '']\n            })]\n          })\n        }) : jsxs(Fragment, {\n          children: [jsx(\"li\", {\n            children: jsxs(\"b\", {\n              children: [uniform.value.name, \":\"]\n            })\n          }), jsxs(\"div\", {\n            children: [Object.keys(uniform.value).map(key => {\n              return key !== 'name' ? jsx(\"div\", {\n                children: key === 'url' ? jsx(\"a\", {\n                  href: uniform.value[key],\n                  target: \"_blank\",\n                  children: jsx(\"img\", {\n                    src: uniform.value[key]\n                  })\n                }) : jsxs(\"li\", {\n                  children: [key, \": \", jsx(\"b\", {\n                    children: uniform.value[key]\n                  })]\n                })\n              }, key) : null;\n            }), jsxs(ProgramConsole, {\n              onClick: () => {\n                var _material$uniforms$un;\n\n                console.info(material[uniform.value.name] || (material === null || material === void 0 ? void 0 : (_material$uniforms$un = material.uniforms[uniform.value.name]) === null || _material$uniforms$un === void 0 ? void 0 : _material$uniforms$un.value));\n              },\n              children: [\"console.info(\", uniform.value.name, \");\"]\n            })]\n          })]\n        })\n      }, uniform.name);\n    })\n  });\n};\n\nconst DynamicDrawCallInfo = ({\n  el\n}) => {\n  usePerfStore(state => state.log);\n  const gl = usePerfStore(state => state.gl);\n\n  const getVal = el => {\n    if (!gl) return 0;\n    const res = Math.round(el.drawCounts.total / (gl.info.render.triangles + gl.info.render.lines + gl.info.render.points) * 100 * 10) / 10;\n    return isFinite(res) && res || 0;\n  };\n\n  return jsx(Fragment, {\n    children: el.drawCounts.total > 0 && jsxs(PerfI, {\n      style: {\n        height: 'auto',\n        width: 'auto',\n        margin: '0 4px'\n      },\n      children: [el.drawCounts.type === 'Triangle' ? jsx(VercelLogoIcon, {\n        style: {\n          top: '-1px'\n        }\n      }) : jsx(ActivityLogIcon, {\n        style: {\n          top: '-1px'\n        }\n      }), el.drawCounts.total, jsxs(\"small\", {\n        children: [el.drawCounts.type, \"s\"]\n      }), gl && jsxs(PerfB, {\n        style: {\n          bottom: '-10px',\n          width: '40px',\n          fontWeight: 'bold'\n        },\n        children: [el.visible && !el.material.wireframe ? getVal(el) : 0, \"%\"]\n      })]\n    })\n  });\n};\n\nconst ProgramUI = ({\n  el\n}) => {\n  const [showProgram, setShowProgram] = useState(el.visible);\n  const [toggleProgram, set] = useState(el.expand);\n  const [texNumber, setTexNumber] = useState(0);\n  const {\n    meshes,\n    program,\n    material\n  } = el;\n  return jsxs(ProgramGeo, {\n    children: [jsxs(ProgramHeader, {\n      onClick: () => {\n        el.expand = !toggleProgram;\n        Object.keys(meshes).forEach(key => {\n          const mesh = meshes[key];\n          mesh.material.wireframe = false;\n        });\n        set(!toggleProgram);\n      },\n      children: [jsx(Toggle, {\n        style: {\n          marginRight: '6px'\n        },\n        children: toggleProgram ? jsx(\"span\", {\n          children: jsx(TriangleDownIcon, {})\n        }) : jsx(\"span\", {\n          children: jsx(TriangleUpIcon, {})\n        })\n      }), program && jsxs(\"span\", {\n        children: [jsx(ProgramTitle, {\n          children: program.name\n        }), jsxs(PerfI, {\n          style: {\n            height: 'auto',\n            width: 'auto',\n            margin: '0 4px'\n          },\n          children: [jsx(LayersIcon, {\n            style: {\n              top: '-1px'\n            }\n          }), Object.keys(meshes).length, jsx(\"small\", {\n            children: Object.keys(meshes).length > 1 ? 'users' : 'user'\n          })]\n        }), texNumber > 0 && jsxs(PerfI, {\n          style: {\n            height: 'auto',\n            width: 'auto',\n            margin: '0 4px'\n          },\n          children: [texNumber > 1 ? jsx(ImageIcon, {\n            style: {\n              top: '-1px'\n            }\n          }) : jsx(ImageIcon, {\n            style: {\n              top: '-1px'\n            }\n          }), texNumber, jsx(\"small\", {\n            children: \"tex\"\n          })]\n        }), jsx(DynamicDrawCallInfo, {\n          el: el\n        }), material.glslVersion === '300 es' && jsxs(PerfI, {\n          style: {\n            height: 'auto',\n            width: 'auto',\n            margin: '0 4px'\n          },\n          children: [jsx(RocketIcon, {\n            style: {\n              top: '-1px'\n            }\n          }), \"300\", jsx(\"small\", {\n            children: \"es\"\n          }), jsx(PerfB, {\n            style: {\n              bottom: '-10px',\n              width: '40px'\n            },\n            children: \"glsl\"\n          })]\n        })]\n      }), jsx(ToggleVisible, {\n        onPointerEnter: () => {\n          Object.keys(meshes).forEach(key => {\n            const mesh = meshes[key];\n            mesh.material.wireframe = true;\n          });\n        },\n        onPointerLeave: () => {\n          Object.keys(meshes).forEach(key => {\n            const mesh = meshes[key];\n            mesh.material.wireframe = false;\n          });\n        },\n        onClick: e => {\n          e.stopPropagation();\n          Object.keys(meshes).forEach(key => {\n            const mesh = meshes[key];\n            const invert = !showProgram;\n            mesh.visible = invert;\n            el.visible = invert;\n            setShowProgram(invert);\n          });\n        },\n        children: showProgram ? jsx(EyeOpenIcon, {}) : jsx(EyeNoneIcon, {})\n      })]\n    }), jsxs(\"div\", {\n      style: {\n        maxHeight: toggleProgram ? '9999px' : 0,\n        overflow: 'hidden'\n      },\n      children: [jsxs(ProgramsULHeader, {\n        children: [jsx(ButtonIcon, {}), \" Uniforms:\"]\n      }), jsx(UniformsGL, {\n        program: program,\n        material: material,\n        setTexNumber: setTexNumber\n      }), jsxs(ProgramsULHeader, {\n        children: [jsx(CubeIcon, {}), \" Geometries:\"]\n      }), jsx(ProgramsUL, {\n        children: meshes && Object.keys(meshes).map(key => meshes[key] && meshes[key].geometry && jsxs(ProgramsGeoLi, {\n          children: [jsxs(\"span\", {\n            children: [meshes[key].geometry.type, \": \"]\n          }), meshes[key].userData && meshes[key].userData.drawCount && jsxs(\"b\", {\n            children: [jsxs(\"div\", {\n              children: [meshes[key].userData.drawCount.count, jsxs(\"small\", {\n                children: [\" \", meshes[key].userData.drawCount.type, \"s\"]\n              })]\n            }), jsx(\"br\", {}), jsxs(\"div\", {\n              children: [Math.round(estimateBytesUsed(meshes[key].geometry) / 1024 * 1000) / 1000, \"Kb\", jsx(\"small\", {\n                children: \" memory used\"\n              })]\n            })]\n          })]\n        }, key))\n      }), jsxs(ProgramConsole, {\n        onClick: () => {\n          console.info(material);\n        },\n        children: [\"console.info(\", material.type, \")\"]\n      })]\n    })]\n  });\n};\n\nconst ProgramsUI = () => {\n  usePerfStore(state => state.triggerProgramsUpdate);\n  const programs = usePerfStore(state => state.programs);\n  return jsx(ProgramsContainer, {\n    children: programs && Array.from(programs.values()).map(el => {\n      if (!el) {\n        return null;\n      }\n\n      return el ? jsx(ProgramUI, {\n        el: el\n      }, el.material.uuid) : null;\n    })\n  });\n};\n\nconst colorsGraph = colorBlind => {\n  const colors = {\n    fps: colorBlind ? '100, 143, 255' : '238,38,110',\n    mem: colorBlind ? '254, 254, 98' : '66,226,46',\n    gpu: colorBlind ? '254,254,254' : '253,151,31',\n    custom: colorBlind ? '86,180,233' : '40,255,255'\n  };\n  return colors;\n};\n\nconst DynamicUI = ({\n  showGraph,\n  colorBlind,\n  customData,\n  minimal\n}) => {\n  const gl = usePerfStore(state => state.gl);\n  return gl ? jsxs(PerfIContainer, {\n    children: [jsxs(PerfI, {\n      children: [jsx(LightningBoltIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`\n        } : {},\n        children: \"GPU\"\n      }), jsx(PerfSmallI, {\n        children: \"ms\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(RulerHorizontalIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).mem.toString()})`\n        } : {},\n        children: \"Memory\"\n      }), jsx(PerfSmallI, {\n        children: \"mb\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(LapTimerIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).fps})`\n        } : {},\n        children: \"FPS\"\n      })]\n    }), !minimal && gl && jsxs(PerfI, {\n      children: [jsx(TextAlignJustifyIcon, {}), jsx(PerfB, {\n        children: gl.info.render.calls === 1 ? 'call' : 'calls'\n      })]\n    }), !minimal && gl && jsxs(PerfI, {\n      children: [jsx(VercelLogoIcon, {}), jsx(PerfB, {\n        children: \"Triangles\"\n      })]\n    }), customData && jsxs(PerfI, {\n      children: [jsx(BarChartIcon, {}), jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).custom})`\n        } : {},\n        children: customData.name\n      }), customData.info && jsx(PerfSmallI, {\n        children: customData.info\n      })]\n    })]\n  }) : null;\n};\n\nconst PerfUI = ({\n  showGraph,\n  colorBlind,\n  deepAnalyze,\n  customData,\n  matrixUpdate,\n  openByDefault,\n  minimal\n}) => {\n  return jsxs(Fragment, {\n    children: [jsx(DynamicUI, {\n      showGraph: showGraph,\n      colorBlind: colorBlind,\n      customData: customData,\n      minimal: minimal\n    }), !minimal && jsx(PerfThree, {\n      matrixUpdate: matrixUpdate,\n      openByDefault: openByDefault,\n      deepAnalyze: deepAnalyze,\n      showGraph: showGraph\n    })]\n  });\n};\n\nconst InfoUI = ({\n  matrixUpdate\n}) => {\n  return jsxs(\"div\", {\n    children: [jsxs(PerfI, {\n      children: [jsx(MarginIcon, {}), jsx(PerfB, {\n        children: \"Geometries\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(ImageIcon, {}), jsx(PerfB, {\n        children: \"Textures\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(ActivityLogIcon, {}), jsx(PerfB, {\n        children: \"shaders\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(MinusIcon, {}), jsx(PerfB, {\n        children: \"Lines\"\n      })]\n    }), jsxs(PerfI, {\n      children: [jsx(DotIcon, {}), jsx(PerfB, {\n        children: \"Points\"\n      })]\n    }), matrixUpdate && jsxs(PerfI, {\n      children: [jsx(DropdownMenuIcon, {}), jsx(PerfB, {\n        children: \"Matrices\"\n      })]\n    })]\n  });\n};\n\nconst ToggleEl = ({\n  tab,\n  title,\n  set\n}) => {\n  const tabStore = usePerfStore(state => state.tab);\n  return jsx(Toggle, {\n    className: `${tabStore === tab ? ' __perf_toggle_tab_active' : ''}`,\n    onClick: () => {\n      set(true);\n      usePerfStore.setState({\n        tab: tab\n      });\n    },\n    children: jsx(\"span\", {\n      children: title\n    })\n  });\n};\n\nconst PerfThree = ({\n  openByDefault,\n  showGraph,\n  deepAnalyze,\n  matrixUpdate\n}) => {\n  const [show, set] = React.useState(openByDefault);\n  return jsxs(\"span\", {\n    children: [jsx(TabContainers, {\n      show: show,\n      showGraph: showGraph,\n      matrixUpdate: matrixUpdate\n    }), openByDefault && !deepAnalyze ? null : jsxs(ToggleContainer, {\n      className: '__perf_toggle',\n      children: [deepAnalyze && jsx(ToggleEl, {\n        tab: \"programs\",\n        title: \"Programs\",\n        set: set\n      }), deepAnalyze && jsx(ToggleEl, {\n        tab: \"infos\",\n        title: \"Infos\",\n        set: set\n      }), jsx(Toggle, {\n        onClick: () => {\n          set(!show);\n        },\n        children: show ? jsxs(\"span\", {\n          children: [jsx(TriangleDownIcon, {}), \" Minimize\"]\n        }) : jsxs(\"span\", {\n          children: [jsx(TriangleUpIcon, {}), \" More\"]\n        })\n      })]\n    })]\n  });\n};\n\nconst TabContainers = ({\n  show,\n  showGraph,\n  matrixUpdate\n}) => {\n  const tab = usePerfStore(state => state.tab);\n  return jsxs(Fragment, {\n    children: [jsx(InfoUI, {\n      matrixUpdate: matrixUpdate\n    }), show && jsx(\"div\", {\n      children: jsx(ContainerScroll, {\n        style: {\n          marginTop: showGraph ? '38px' : 0\n        },\n        children: tab === 'programs' && jsx(ProgramsUI, {})\n      })\n    })]\n  });\n};\n\nconst Gui = ({\n  showGraph,\n  colorBlind,\n  openByDefault,\n  className,\n  style,\n  position,\n  chart,\n  deepAnalyze,\n  antialias,\n  customData,\n  matrixUpdate,\n  minimal\n}) => {\n  const perfContainerRef = useRef(null);\n  return jsxs(Fragment, {\n    children: [jsx(Headless, {\n      chart: chart,\n      deepAnalyze: deepAnalyze,\n      matrixUpdate: matrixUpdate\n    }), jsx(Html, {\n      transform: false,\n      children: jsxs(PerfS, {\n        className: (className ? ' '.concat(className) : ' ') + ` ${position ? position : ''} ${minimal ? 'minimal' : ''}`,\n        style: _objectSpread2({\n          minHeight: minimal ? '37px' : showGraph ? '100px' : '60px'\n        }, style),\n        ref: perfContainerRef,\n        children: [jsx(ChartUI, {\n          perfContainerRef: perfContainerRef,\n          colorBlind: colorBlind,\n          chart: chart,\n          showGraph: showGraph,\n          antialias: antialias,\n          customData: customData,\n          minimal: minimal,\n          matrixUpdate: matrixUpdate\n        }), jsx(PerfUI, {\n          colorBlind: colorBlind,\n          showGraph: showGraph,\n          deepAnalyze: deepAnalyze,\n          openByDefault: openByDefault,\n          customData: customData,\n          matrixUpdate: matrixUpdate,\n          minimal: minimal\n        })]\n      })\n    })]\n  });\n};\n\nconst Perf = ({\n  headless: _headless = false,\n  colorBlind: _colorBlind = false,\n  showGraph: _showGraph = true,\n  trackCPU: _trackCPU = false,\n  deepAnalyze: _deepAnalyze = false,\n  antialias: _antialias = true,\n  openByDefault: _openByDefault = true,\n  customData,\n  matrixUpdate: _matrixUpdate = false,\n  position: _position = 'top-right',\n  chart: _chart = {\n    length: 30,\n    hz: 15\n  },\n  className,\n  style,\n  minimal: _minimal = false\n}) => {\n  return _headless ? jsx(Headless, {\n    chart: _chart,\n    deepAnalyze: _deepAnalyze,\n    matrixUpdate: _matrixUpdate\n  }) : jsx(Gui, {\n    colorBlind: _colorBlind,\n    showGraph: _showGraph,\n    trackCPU: _trackCPU,\n    openByDefault: _openByDefault,\n    className: className,\n    style: style,\n    position: _position,\n    antialias: _antialias,\n    chart: _chart,\n    deepAnalyze: _deepAnalyze,\n    minimal: _minimal,\n    customData: customData,\n    matrixUpdate: _matrixUpdate\n  });\n};\nconst usePerf = usePerfFunc;\n\nexport { Perf, getCustomData, setCustomData, usePerf };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}