{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\Interface.js\",\n    _s = $RefreshSig$();\n\nimport \"./interface.css\";\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport PurplePlane from \"./Plane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Interface() {\n  _s();\n\n  const [prompt, setPrompt] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\");\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    setPlaceholder(`Search ${prompt}..`);\n    setLoading(true);\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\"\n    });\n    setLoading(false);\n    setResult(res.data.data[0].url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generating..Please Wait..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lds-ripple\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generate an Image using Open AI API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"app-input\",\n        placeholder: placeholder,\n        onChange: e => setPrompt(e.target.value),\n        rows: \"10\",\n        cols: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-create \",\n        onClick: generateImage,\n        children: \"Generate an Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), result.length > 0 ? /*#__PURE__*/_jsxDEV(PurplePlane, {\n        src: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) // <img className=\"result-image\" src={result} alt=\"result\" />\n      : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Interface, \"Aagd+lBHdU1KI8+Bd+OjC7xF2rk=\");\n\n_c = Interface;\n\nvar _c;\n\n$RefreshReg$(_c, \"Interface\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","PurplePlane","Interface","prompt","setPrompt","result","setResult","loading","setLoading","placeholder","setPlaceholder","configuration","apiKey","openai","generateImage","res","createImage","n","size","data","url","e","target","value","length"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/Interface.js"],"sourcesContent":["import \"./interface.css\";\r\nimport { useState } from \"react\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport PurplePlane from \"./Plane\";\r\n\r\n\r\nexport default function Interface(){\r\n    const [prompt, setPrompt] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [placeholder, setPlaceholder] = useState(\r\n    \"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\"\r\n  );\r\n  const configuration = new Configuration({\r\n    apiKey: \"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\",\r\n  });\r\n\r\n  const openai = new OpenAIApi(configuration);\r\n\r\n  const generateImage = async () => {\r\n    setPlaceholder(`Search ${prompt}..`);\r\n    setLoading(true);\r\n    const res = await openai.createImage({\r\n      prompt: prompt,\r\n      n: 1,\r\n      size: \"512x512\",\r\n    });\r\n    setLoading(false);\r\n    setResult(res.data.data[0].url);\r\n  };\r\n  return (\r\n    <div className=\"app-main\">\r\n      {loading ? (\r\n        <>\r\n          <h2>Generating..Please Wait..</h2>\r\n          <div className=\"lds-ripple\">\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Generate an Image using Open AI API</h2>\r\n\r\n          <textarea\r\n            className=\"app-input\"\r\n            placeholder={placeholder}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            rows=\"10\"\r\n            cols=\"40\"\r\n          />\r\n          <button className=\"button-create \" onClick={generateImage}>Generate an Image</button>\r\n          {result.length > 0 ? (\r\n            <PurplePlane src={result} />\r\n            \r\n            // <img className=\"result-image\" src={result} alt=\"result\" />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;AACA,OAAOC,WAAP,MAAwB,SAAxB;;;AAGA,eAAe,SAASC,SAAT,GAAoB;EAAA;;EAC/B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACF,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAC5C,iFAD4C,CAA9C;EAGA,MAAMa,aAAa,GAAG,IAAIZ,aAAJ,CAAkB;IACtCa,MAAM,EAAE;EAD8B,CAAlB,CAAtB;EAIA,MAAMC,MAAM,GAAG,IAAIb,SAAJ,CAAcW,aAAd,CAAf;;EAEA,MAAMG,aAAa,GAAG,YAAY;IAChCJ,cAAc,CAAE,UAASP,MAAO,IAAlB,CAAd;IACAK,UAAU,CAAC,IAAD,CAAV;IACA,MAAMO,GAAG,GAAG,MAAMF,MAAM,CAACG,WAAP,CAAmB;MACnCb,MAAM,EAAEA,MAD2B;MAEnCc,CAAC,EAAE,CAFgC;MAGnCC,IAAI,EAAE;IAH6B,CAAnB,CAAlB;IAKAV,UAAU,CAAC,KAAD,CAAV;IACAF,SAAS,CAACS,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBC,GAAlB,CAAT;EACD,CAVD;;EAWA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,UACGb,OAAO,gBACN;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADM,gBASN;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QACE,SAAS,EAAC,WADZ;QAEE,WAAW,EAAEE,WAFf;QAGE,QAAQ,EAAGY,CAAD,IAAOjB,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;QAIE,IAAI,EAAC,IAJP;QAKE,IAAI,EAAC;MALP;QAAA;QAAA;QAAA;MAAA,QAHF,eAUE;QAAQ,SAAS,EAAC,gBAAlB;QAAmC,OAAO,EAAET,aAA5C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,EAWGT,MAAM,CAACmB,MAAP,GAAgB,CAAhB,gBACC,QAAC,WAAD;QAAa,GAAG,EAAEnB;MAAlB;QAAA;QAAA;QAAA;MAAA,QADD,CAGC;MAHD,eAKC,qCAhBJ;IAAA;EAVJ;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GAzDuBH,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}