{"ast":null,"code":"/**\n * @license\n * Copyright 2017 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/* The comments about status codes are copied verbatim (with some formatting\n * modifications) from include/grpc/impl/codegen/status.h, for the purpose of\n * including them in generated documentation.\n */\n\n/**\n * Enum of status codes that gRPC can return\n * @memberof grpc\n * @alias grpc.status\n * @readonly\n * @enum {number}\n */\nexports.status = {\n  /** Not an error; returned on success */\n  OK: 0,\n\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: 1,\n\n  /**\n   * Unknown error.  An example of where this error may be returned is\n   * if a status value received from another address space belongs to\n   * an error-space that is not known in this address space.  Also\n   * errors raised by APIs that do not return enough error information\n   * may be converted to this error.\n   */\n  UNKNOWN: 2,\n\n  /**\n   * Client specified an invalid argument.  Note that this differs\n   * from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments\n   * that are problematic regardless of the state of the system\n   * (e.g., a malformed file name).\n   */\n  INVALID_ARGUMENT: 3,\n\n  /**\n   * Deadline expired before operation could complete.  For operations\n   * that change the state of the system, this error may be returned\n   * even if the operation has completed successfully.  For example, a\n   * successful response from a server could have been delayed long\n   * enough for the deadline to expire.\n   */\n  DEADLINE_EXCEEDED: 4,\n\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: 5,\n\n  /**\n   * Some entity that we attempted to create (e.g., file or directory)\n   * already exists.\n   */\n  ALREADY_EXISTS: 6,\n\n  /**\n   * The caller does not have permission to execute the specified\n   * operation.  PERMISSION_DENIED must not be used for rejections\n   * caused by exhausting some resource (use RESOURCE_EXHAUSTED\n   * instead for those errors).  PERMISSION_DENIED must not be\n   * used if the caller can not be identified (use UNAUTHENTICATED\n   * instead for those errors).\n   */\n  PERMISSION_DENIED: 7,\n\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or\n   * perhaps the entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED: 8,\n\n  /**\n   * Operation was rejected because the system is not in a state\n   * required for the operation's execution.  For example, directory\n   * to be deleted may be non-empty, an rmdir operation is applied to\n   * a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *\n   *  - Use UNAVAILABLE if the client can retry just the failing call.\n   *  - Use ABORTED if the client should retry at a higher-level\n   *    (e.g., restarting a read-modify-write sequence).\n   *  - Use FAILED_PRECONDITION if the client should not retry until\n   *    the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n   *    fails because the directory is non-empty, FAILED_PRECONDITION\n   *    should be returned since the client should not retry unless\n   *    they have first fixed up the directory by deleting files from it.\n   *  - Use FAILED_PRECONDITION if the client performs conditional\n   *    REST Get/Update/Delete on a resource and the resource on the\n   *    server does not match the condition. E.g., conflicting\n   *    read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION: 9,\n\n  /**\n   * The operation was aborted, typically due to a concurrency issue\n   * like sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION,\n   * ABORTED, and UNAVAILABLE.\n   */\n  ABORTED: 10,\n\n  /**\n   * Operation was attempted past the valid range.  E.g., seeking or\n   * reading past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may\n   * be fixed if the system state changes. For example, a 32-bit file\n   * system will generate INVALID_ARGUMENT if asked to read at an\n   * offset that is not in the range [0,2^32-1], but it will generate\n   * OUT_OF_RANGE if asked to read from an offset past the current\n   * file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific\n   * error) when it applies so that callers who are iterating through\n   * a space can easily look for an OUT_OF_RANGE error to detect when\n   * they are done.\n   */\n  OUT_OF_RANGE: 11,\n\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: 12,\n\n  /**\n   * Internal errors.  Means some invariants expected by underlying\n   * system has been broken.  If you see one of these errors,\n   * something is very broken.\n   */\n  INTERNAL: 13,\n\n  /**\n   * The service is currently unavailable.  This is a most likely a\n   * transient condition and may be corrected by retrying with\n   * a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION,\n   * ABORTED, and UNAVAILABLE.\n   */\n  UNAVAILABLE: 14,\n\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: 15,\n\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED: 16\n};\n/* The comments about propagation bit flags are copied from\n * include/grpc/impl/codegen/propagation_bits.h for the purpose of including\n * them in generated documentation.\n */\n\n/**\n * Propagation flags: these can be bitwise or-ed to form the propagation option\n * for calls.\n *\n * Users are encouraged to write propagation masks as deltas from the default.\n * i.e. write `grpc.propagate.DEFAULTS & ~grpc.propagate.DEADLINE` to disable\n * deadline propagation.\n * @memberof grpc\n * @alias grpc.propagate\n * @enum {number}\n */\n\nexports.propagate = {\n  DEADLINE: 1,\n  CENSUS_STATS_CONTEXT: 2,\n  CENSUS_TRACING_CONTEXT: 4,\n  CANCELLATION: 8,\n  DEFAULTS: 65535\n};\n/* Many of the following comments are copied from\n * include/grpc/impl/codegen/grpc_types.h\n */\n\n/**\n * Call error constants. Call errors almost always indicate bugs in the gRPC\n * library, and these error codes are mainly useful for finding those bugs.\n * @memberof grpc\n * @readonly\n * @enum {number}\n */\n\nconst callError = {\n  OK: 0,\n  ERROR: 1,\n  NOT_ON_SERVER: 2,\n  NOT_ON_CLIENT: 3,\n  ALREADY_INVOKED: 5,\n  NOT_INVOKED: 6,\n  ALREADY_FINISHED: 7,\n  TOO_MANY_OPERATIONS: 8,\n  INVALID_FLAGS: 9,\n  INVALID_METADATA: 10,\n  INVALID_MESSAGE: 11,\n  NOT_SERVER_COMPLETION_QUEUE: 12,\n  BATCH_TOO_BIG: 13,\n  PAYLOAD_TYPE_MISMATCH: 14\n};\nexports.callError = callError;\n/**\n * Write flags: these can be bitwise or-ed to form write options that modify\n * how data is written.\n * @memberof grpc\n * @alias grpc.writeFlags\n * @readonly\n * @enum {number}\n */\n\nexports.writeFlags = {\n  /**\n   * Hint that the write may be buffered and need not go out on the wire\n   * immediately. GRPC is free to buffer the message until the next non-buffered\n   * write, or until writes_done, but it need not buffer completely or at all.\n   */\n  BUFFER_HINT: 1,\n\n  /**\n   * Force compression to be disabled for a particular write\n   */\n  NO_COMPRESS: 2\n};\n/**\n * @memberof grpc\n * @alias grpc.logVerbosity\n * @readonly\n * @enum {number}\n */\n\nexports.logVerbosity = {\n  DEBUG: 0,\n  INFO: 1,\n  ERROR: 2\n};\n/**\n * Method types: the supported RPC types\n * @memberof grpc\n * @alias grpc.methodTypes\n * @readonly\n * @enum {number}\n */\n\nexports.methodTypes = {\n  UNARY: 0,\n  CLIENT_STREAMING: 1,\n  SERVER_STREAMING: 2,\n  BIDI_STREAMING: 3\n};\n/**\n * Connectivity state values\n * @memberof grpc\n * @alias grpc.connectivityState\n * @readonly\n * @enum {number}\n */\n\nexports.connectivityState = {\n  IDLE: 0,\n  CONNECTING: 1,\n  READY: 2,\n  TRANSIENT_FAILURE: 3,\n  SHUTDOWN: 4\n};","map":{"version":3,"names":["exports","status","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","UNAUTHENTICATED","propagate","DEADLINE","CENSUS_STATS_CONTEXT","CENSUS_TRACING_CONTEXT","CANCELLATION","DEFAULTS","callError","ERROR","NOT_ON_SERVER","NOT_ON_CLIENT","ALREADY_INVOKED","NOT_INVOKED","ALREADY_FINISHED","TOO_MANY_OPERATIONS","INVALID_FLAGS","INVALID_METADATA","INVALID_MESSAGE","NOT_SERVER_COMPLETION_QUEUE","BATCH_TOO_BIG","PAYLOAD_TYPE_MISMATCH","writeFlags","BUFFER_HINT","NO_COMPRESS","logVerbosity","DEBUG","INFO","methodTypes","UNARY","CLIENT_STREAMING","SERVER_STREAMING","BIDI_STREAMING","connectivityState","IDLE","CONNECTING","READY","TRANSIENT_FAILURE","SHUTDOWN"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/node_modules/grpc/src/constants.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/* The comments about status codes are copied verbatim (with some formatting\n * modifications) from include/grpc/impl/codegen/status.h, for the purpose of\n * including them in generated documentation.\n */\n/**\n * Enum of status codes that gRPC can return\n * @memberof grpc\n * @alias grpc.status\n * @readonly\n * @enum {number}\n */\nexports.status = {\n  /** Not an error; returned on success */\n  OK: 0,\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: 1,\n  /**\n   * Unknown error.  An example of where this error may be returned is\n   * if a status value received from another address space belongs to\n   * an error-space that is not known in this address space.  Also\n   * errors raised by APIs that do not return enough error information\n   * may be converted to this error.\n   */\n  UNKNOWN: 2,\n  /**\n   * Client specified an invalid argument.  Note that this differs\n   * from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments\n   * that are problematic regardless of the state of the system\n   * (e.g., a malformed file name).\n   */\n  INVALID_ARGUMENT: 3,\n  /**\n   * Deadline expired before operation could complete.  For operations\n   * that change the state of the system, this error may be returned\n   * even if the operation has completed successfully.  For example, a\n   * successful response from a server could have been delayed long\n   * enough for the deadline to expire.\n   */\n  DEADLINE_EXCEEDED: 4,\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: 5,\n  /**\n   * Some entity that we attempted to create (e.g., file or directory)\n   * already exists.\n   */\n  ALREADY_EXISTS: 6,\n  /**\n   * The caller does not have permission to execute the specified\n   * operation.  PERMISSION_DENIED must not be used for rejections\n   * caused by exhausting some resource (use RESOURCE_EXHAUSTED\n   * instead for those errors).  PERMISSION_DENIED must not be\n   * used if the caller can not be identified (use UNAUTHENTICATED\n   * instead for those errors).\n   */\n  PERMISSION_DENIED: 7,\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or\n   * perhaps the entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED: 8,\n  /**\n   * Operation was rejected because the system is not in a state\n   * required for the operation's execution.  For example, directory\n   * to be deleted may be non-empty, an rmdir operation is applied to\n   * a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *\n   *  - Use UNAVAILABLE if the client can retry just the failing call.\n   *  - Use ABORTED if the client should retry at a higher-level\n   *    (e.g., restarting a read-modify-write sequence).\n   *  - Use FAILED_PRECONDITION if the client should not retry until\n   *    the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n   *    fails because the directory is non-empty, FAILED_PRECONDITION\n   *    should be returned since the client should not retry unless\n   *    they have first fixed up the directory by deleting files from it.\n   *  - Use FAILED_PRECONDITION if the client performs conditional\n   *    REST Get/Update/Delete on a resource and the resource on the\n   *    server does not match the condition. E.g., conflicting\n   *    read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION: 9,\n  /**\n   * The operation was aborted, typically due to a concurrency issue\n   * like sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION,\n   * ABORTED, and UNAVAILABLE.\n   */\n  ABORTED: 10,\n  /**\n   * Operation was attempted past the valid range.  E.g., seeking or\n   * reading past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may\n   * be fixed if the system state changes. For example, a 32-bit file\n   * system will generate INVALID_ARGUMENT if asked to read at an\n   * offset that is not in the range [0,2^32-1], but it will generate\n   * OUT_OF_RANGE if asked to read from an offset past the current\n   * file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific\n   * error) when it applies so that callers who are iterating through\n   * a space can easily look for an OUT_OF_RANGE error to detect when\n   * they are done.\n   */\n  OUT_OF_RANGE: 11,\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: 12,\n  /**\n   * Internal errors.  Means some invariants expected by underlying\n   * system has been broken.  If you see one of these errors,\n   * something is very broken.\n   */\n  INTERNAL: 13,\n  /**\n   * The service is currently unavailable.  This is a most likely a\n   * transient condition and may be corrected by retrying with\n   * a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION,\n   * ABORTED, and UNAVAILABLE.\n   */\n  UNAVAILABLE: 14,\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: 15,\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED: 16\n};\n\n/* The comments about propagation bit flags are copied from\n * include/grpc/impl/codegen/propagation_bits.h for the purpose of including\n * them in generated documentation.\n */\n/**\n * Propagation flags: these can be bitwise or-ed to form the propagation option\n * for calls.\n *\n * Users are encouraged to write propagation masks as deltas from the default.\n * i.e. write `grpc.propagate.DEFAULTS & ~grpc.propagate.DEADLINE` to disable\n * deadline propagation.\n * @memberof grpc\n * @alias grpc.propagate\n * @enum {number}\n */\nexports.propagate = {\n  DEADLINE: 1,\n  CENSUS_STATS_CONTEXT: 2,\n  CENSUS_TRACING_CONTEXT: 4,\n  CANCELLATION: 8,\n  DEFAULTS: 65535\n};\n\n/* Many of the following comments are copied from\n * include/grpc/impl/codegen/grpc_types.h\n */\n/**\n * Call error constants. Call errors almost always indicate bugs in the gRPC\n * library, and these error codes are mainly useful for finding those bugs.\n * @memberof grpc\n * @readonly\n * @enum {number}\n */\nconst callError = {\n  OK: 0,\n  ERROR: 1,\n  NOT_ON_SERVER: 2,\n  NOT_ON_CLIENT: 3,\n  ALREADY_INVOKED: 5,\n  NOT_INVOKED: 6,\n  ALREADY_FINISHED: 7,\n  TOO_MANY_OPERATIONS: 8,\n  INVALID_FLAGS: 9,\n  INVALID_METADATA: 10,\n  INVALID_MESSAGE: 11,\n  NOT_SERVER_COMPLETION_QUEUE: 12,\n  BATCH_TOO_BIG: 13,\n  PAYLOAD_TYPE_MISMATCH: 14\n};\n\nexports.callError = callError;\n\n/**\n * Write flags: these can be bitwise or-ed to form write options that modify\n * how data is written.\n * @memberof grpc\n * @alias grpc.writeFlags\n * @readonly\n * @enum {number}\n */\nexports.writeFlags = {\n  /**\n   * Hint that the write may be buffered and need not go out on the wire\n   * immediately. GRPC is free to buffer the message until the next non-buffered\n   * write, or until writes_done, but it need not buffer completely or at all.\n   */\n  BUFFER_HINT: 1,\n  /**\n   * Force compression to be disabled for a particular write\n   */\n  NO_COMPRESS: 2\n};\n\n/**\n * @memberof grpc\n * @alias grpc.logVerbosity\n * @readonly\n * @enum {number}\n */\nexports.logVerbosity = {\n  DEBUG: 0,\n  INFO: 1,\n  ERROR: 2\n};\n\n/**\n * Method types: the supported RPC types\n * @memberof grpc\n * @alias grpc.methodTypes\n * @readonly\n * @enum {number}\n */\nexports.methodTypes = {\n  UNARY: 0,\n  CLIENT_STREAMING: 1,\n  SERVER_STREAMING: 2,\n  BIDI_STREAMING: 3\n};\n\n/**\n * Connectivity state values\n * @memberof grpc\n * @alias grpc.connectivityState\n * @readonly\n * @enum {number}\n */\nexports.connectivityState = {\n  IDLE: 0,\n  CONNECTING: 1,\n  READY: 2,\n  TRANSIENT_FAILURE: 3,\n  SHUTDOWN: 4\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,MAAR,GAAiB;EACf;EACAC,EAAE,EAAE,CAFW;;EAGf;EACAC,SAAS,EAAE,CAJI;;EAKf;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,CAZM;;EAaf;AACF;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,CAnBH;;EAoBf;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,CA3BJ;;EA4Bf;EACAC,SAAS,EAAE,CA7BI;;EA8Bf;AACF;AACA;AACA;EACEC,cAAc,EAAE,CAlCD;;EAmCf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,CA3CJ;;EA4Cf;AACF;AACA;AACA;EACEC,kBAAkB,EAAE,CAhDL;;EAiDf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,mBAAmB,EAAE,CAvEN;;EAwEf;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,EA/EM;;EAgFf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,YAAY,EAAE,EAjGC;;EAkGf;EACAC,aAAa,EAAE,EAnGA;;EAoGf;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE,EAzGK;;EA0Gf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,EAlHE;;EAmHf;EACAC,SAAS,EAAE,EApHI;;EAqHf;AACF;AACA;AACA;EACEC,eAAe,EAAE;AAzHF,CAAjB;AA4HA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAlB,OAAO,CAACmB,SAAR,GAAoB;EAClBC,QAAQ,EAAE,CADQ;EAElBC,oBAAoB,EAAE,CAFJ;EAGlBC,sBAAsB,EAAE,CAHN;EAIlBC,YAAY,EAAE,CAJI;EAKlBC,QAAQ,EAAE;AALQ,CAApB;AAQA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG;EAChBvB,EAAE,EAAE,CADY;EAEhBwB,KAAK,EAAE,CAFS;EAGhBC,aAAa,EAAE,CAHC;EAIhBC,aAAa,EAAE,CAJC;EAKhBC,eAAe,EAAE,CALD;EAMhBC,WAAW,EAAE,CANG;EAOhBC,gBAAgB,EAAE,CAPF;EAQhBC,mBAAmB,EAAE,CARL;EAShBC,aAAa,EAAE,CATC;EAUhBC,gBAAgB,EAAE,EAVF;EAWhBC,eAAe,EAAE,EAXD;EAYhBC,2BAA2B,EAAE,EAZb;EAahBC,aAAa,EAAE,EAbC;EAchBC,qBAAqB,EAAE;AAdP,CAAlB;AAiBAtC,OAAO,CAACyB,SAAR,GAAoBA,SAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAzB,OAAO,CAACuC,UAAR,GAAqB;EACnB;AACF;AACA;AACA;AACA;EACEC,WAAW,EAAE,CANM;;EAOnB;AACF;AACA;EACEC,WAAW,EAAE;AAVM,CAArB;AAaA;AACA;AACA;AACA;AACA;AACA;;AACAzC,OAAO,CAAC0C,YAAR,GAAuB;EACrBC,KAAK,EAAE,CADc;EAErBC,IAAI,EAAE,CAFe;EAGrBlB,KAAK,EAAE;AAHc,CAAvB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA1B,OAAO,CAAC6C,WAAR,GAAsB;EACpBC,KAAK,EAAE,CADa;EAEpBC,gBAAgB,EAAE,CAFE;EAGpBC,gBAAgB,EAAE,CAHE;EAIpBC,cAAc,EAAE;AAJI,CAAtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAjD,OAAO,CAACkD,iBAAR,GAA4B;EAC1BC,IAAI,EAAE,CADoB;EAE1BC,UAAU,EAAE,CAFc;EAG1BC,KAAK,EAAE,CAHmB;EAI1BC,iBAAiB,EAAE,CAJO;EAK1BC,QAAQ,EAAE;AALgB,CAA5B"},"metadata":{},"sourceType":"script"}