{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport { useMatcapTexture, Center, Text3D, OrbitControls } from '@react-three/drei';\nimport { Perf } from 'r3f-perf';\nimport { useEffect, useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { PlaneGeometry } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32);\nconst material = new THREE.MeshMatcapMaterial();\nexport default function Experience() {\n  _s();\n\n  const donuts = useRef([]);\n  const [matcapTexture] = useMatcapTexture('7B5254_E9DCC7_B19986_C8AC91', 256);\n  useFrame((state, delta) => {\n    for (const donut of donuts.current) {\n      donut.rotation.y += delta * 0.2;\n    }\n  });\n  useEffect(() => {\n    matcapTexture.encoding = THREE.sRGBEncoding;\n    matcapTexture.needsUpdate = true;\n    material.matcap = matcapTexture;\n    material.needsUpdate = true;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Perf, {\n      position: \"top-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      makeDefault: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: [/*#__PURE__*/_jsxDEV(Text3D, {\n        material: material,\n        font: \"./fonts/helvetiker_regular.typeface.json\",\n        size: 0.75,\n        height: 0.2,\n        curveSegments: 12,\n        bevelEnabled: true,\n        bevelThickness: 0.02,\n        bevelSize: 0.02,\n        bevelOffset: 0,\n        bevelSegments: 5,\n        children: \"TRY IT!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n          args: [7, 3.5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), [...Array(100)].map((value, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: element => donuts.current[index] = element,\n      geometry: torusGeometry,\n      material: material,\n      position: [Math.cos(-(Math.random() * Math.PI * 2)) * (12 + Math.random() * 0.5), (Math.random() - 0.5) * 10, Math.sin(-(Math.random() * Math.PI * 2)) * (12 + Math.random() * 0.5)],\n      scale: 0.2 + Math.random() * 0.2,\n      rotation: [Math.random() * Math.PI, Math.random() * Math.PI, 0],\n      children: /*#__PURE__*/_jsxDEV(\"torusGeometry\", {\n        args: [1, 0.6, 16, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Experience, \"TcrTThIBuMC2yvgkObIUdPumZkQ=\", false, function () {\n  return [useMatcapTexture, useFrame];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useMatcapTexture","Center","Text3D","OrbitControls","Perf","useEffect","useRef","useState","useFrame","THREE","PlaneGeometry","torusGeometry","TorusGeometry","material","MeshMatcapMaterial","Experience","donuts","matcapTexture","state","delta","donut","current","rotation","y","encoding","sRGBEncoding","needsUpdate","matcap","Array","map","value","index","element","Math","cos","random","PI","sin"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/Experience.js"],"sourcesContent":["import { useMatcapTexture, Center, Text3D, OrbitControls } from '@react-three/drei'\nimport { Perf } from 'r3f-perf'\nimport { useEffect, useRef, useState } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport * as THREE from 'three'\nimport { PlaneGeometry } from 'three'\n\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32)\nconst material = new THREE.MeshMatcapMaterial()\n\nexport default function Experience()\n{\n    const donuts = useRef([])\n\n    const [ matcapTexture ] = useMatcapTexture('7B5254_E9DCC7_B19986_C8AC91', 256)\n\n    useFrame((state, delta) =>\n    {\n        for(const donut of donuts.current)\n        {\n            donut.rotation.y += delta * 0.2\n        }\n    })\n\n    useEffect(() =>\n    {\n        matcapTexture.encoding = THREE.sRGBEncoding\n        matcapTexture.needsUpdate = true\n\n        material.matcap = matcapTexture\n        material.needsUpdate = true\n    }, [])\n\n    return <>\n\n        <Perf position=\"top-left\" />\n\n        <OrbitControls makeDefault />\n\n        <Center>\n            <Text3D\n                material={ material }\n                font=\"./fonts/helvetiker_regular.typeface.json\"\n                size={ 0.75 }\n                height={ 0.2 }\n                curveSegments={ 12 }\n                bevelEnabled\n                bevelThickness={ 0.02 }\n                bevelSize={ 0.02 }\n                bevelOffset={ 0 }\n                bevelSegments={ 5 }\n                \n            >\n                TRY IT!\n            </Text3D>\n\n            <mesh>\n                <planeGeometry args={[7, 3.5]} />\n                <meshBasicMaterial color=\"purple\"  />\n            </mesh>\n        </Center>\n\n        { [...Array(100)].map((value, index) =>\n            <mesh\n                ref={ (element) => donuts.current[index] = element }\n                key={ index }\n                geometry={ torusGeometry }\n                material={ material }\n                position={ [\n                    (Math.cos(- ((Math.random() * Math.PI * 2 ))) * (12 + Math.random() * 0.5)),\n                    ((Math.random() - 0.5 )* 10),\n                    (Math.sin(- ((Math.random() * Math.PI * 2 ))) * (12 + Math.random() * 0.5))\n                ] }\n                scale={ 0.2 + Math.random() * 0.2 }\n                rotation={ [\n                    Math.random() * Math.PI,\n                    Math.random() * Math.PI,\n                    0\n                ] }\n            >\n                <torusGeometry args={ [ 1, 0.6, 16, 32 ] } />\n            </mesh>\n        ) }\n\n    </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}