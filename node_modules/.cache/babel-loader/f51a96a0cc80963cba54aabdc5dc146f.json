{"ast":null,"code":"export const SHOW_PICTURE = \"SHOW_PICTURE\";\nexport const LOAD_PICTURE = \"LOAD_PICTURE\";\nexport const ERROR_PICTURE = \"ERROR_PICTURE\";\nexport const onLoadPicture = description => ({\n  type: LOAD_PICTURE,\n  payload: description\n});\nexport const showPicture = item => ({\n  type: SHOW_PICTURE,\n  payload: item\n});\nexport const onLoadError = error => ({\n  type: ERROR_PICTURE,\n  payload: error\n});\nexport const getPicture = data => {\n  return function (dispatch) {\n    dispatch({\n      type: LOAD_PICTURE\n    });\n    fetch(`${BURGER_API_URL}/orders`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(checkResponse).then(result => {\n      dispatch({\n        type: ORDER_SUCCESS,\n        payload: result.order.number\n      });\n    }).then(dispatch({\n      type: CONSTRUCTOR_RESET\n    })).catch(() => dispatch({\n      type: ORDER_ERROR\n    }));\n  };\n};","map":{"version":3,"names":["SHOW_PICTURE","LOAD_PICTURE","ERROR_PICTURE","onLoadPicture","description","type","payload","showPicture","item","onLoadError","error","getPicture","data","dispatch","fetch","BURGER_API_URL","method","headers","body","JSON","stringify","then","checkResponse","result","ORDER_SUCCESS","order","number","CONSTRUCTOR_RESET","catch","ORDER_ERROR"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/services/actions.js"],"sourcesContent":["export const SHOW_PICTURE = \"SHOW_PICTURE\";\r\nexport const LOAD_PICTURE = \"LOAD_PICTURE\";\r\nexport const ERROR_PICTURE = \"ERROR_PICTURE\";\r\n\r\n\r\nexport const onLoadPicture = (description) => ({\r\n    type: LOAD_PICTURE,\r\n    payload: description\r\n})\r\nexport const showPicture = (item) => ({\r\n  type: SHOW_PICTURE,\r\n  payload: item,\r\n});\r\n\r\nexport const onLoadError = (error) => ({\r\n    type: ERROR_PICTURE,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const getPicture = (data) =>  {\r\n    return function (dispatch){\r\n        dispatch({type: LOAD_PICTURE});\r\n        fetch(`${BURGER_API_URL}/orders`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n           },\r\n          body: JSON.stringify(data),\r\n        })\r\n          .then(checkResponse)\r\n          .then((result) => {\r\n            dispatch({type: ORDER_SUCCESS,\r\n              payload: result.order.number});\r\n          })\r\n          .then(dispatch({type: CONSTRUCTOR_RESET}))\r\n          \r\n          .catch(() => dispatch({type: ORDER_ERROR}));}\r\n\r\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAGP,OAAO,MAAMC,aAAa,GAAIC,WAAD,KAAkB;EAC3CC,IAAI,EAAEJ,YADqC;EAE3CK,OAAO,EAAEF;AAFkC,CAAlB,CAAtB;AAIP,OAAO,MAAMG,WAAW,GAAIC,IAAD,KAAW;EACpCH,IAAI,EAAEL,YAD8B;EAEpCM,OAAO,EAAEE;AAF2B,CAAX,CAApB;AAKP,OAAO,MAAMC,WAAW,GAAIC,KAAD,KAAY;EACnCL,IAAI,EAAEH,aAD6B;EAEnCI,OAAO,EAAEI;AAF0B,CAAZ,CAApB;AAMP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAW;EACjC,OAAO,UAAUC,QAAV,EAAmB;IACtBA,QAAQ,CAAC;MAACR,IAAI,EAAEJ;IAAP,CAAD,CAAR;IACAa,KAAK,CAAE,GAAEC,cAAe,SAAnB,EAA6B;MAChCC,MAAM,EAAE,MADwB;MAEhCC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFuB;MAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;IAL0B,CAA7B,CAAL,CAOGS,IAPH,CAOQC,aAPR,EAQGD,IARH,CAQSE,MAAD,IAAY;MAChBV,QAAQ,CAAC;QAACR,IAAI,EAAEmB,aAAP;QACPlB,OAAO,EAAEiB,MAAM,CAACE,KAAP,CAAaC;MADf,CAAD,CAAR;IAED,CAXH,EAYGL,IAZH,CAYQR,QAAQ,CAAC;MAACR,IAAI,EAAEsB;IAAP,CAAD,CAZhB,EAcGC,KAdH,CAcS,MAAMf,QAAQ,CAAC;MAACR,IAAI,EAAEwB;IAAP,CAAD,CAdvB;EAc+C,CAhBnD;AAkBH,CAnBM"},"metadata":{},"sourceType":"module"}