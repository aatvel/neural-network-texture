{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\MyComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport \"./interface.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [texture, setTexture] = useState(null);\n  const canvasRef = useRef(null);\n  const [prompt, setPrompt] = useState(\"\");\n  const [placeholder, setPlaceholder] = useState(\"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\");\n  const textureLoader = new THREE.TextureLoader();\n\n  const generateTexture = () => {\n    // Generate image using DALL-E API\n    const description = \"A two-story pink house with a white fence and a red door.\";\n    const apiKey = \"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\";\n    const body = {\n      prompt: description,\n      model: \"image-alpha-001\",\n      api_key: apiKey\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    fetch(\"https://api.openai.com/v1/images/generations\", {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      setImageUrl(data.data[0].url);\n    }).catch(error => console.error(error));\n    textureLoader.load(imageUrl, texture => {\n      setTexture(texture);\n    });\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas\n    });\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      map: texture\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [canvasRef, texture]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateTexture,\n      children: \"Generate Texture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"app-input\",\n      placeholder: placeholder,\n      onChange: e => setPrompt(e.target.value),\n      rows: \"10\",\n      cols: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyComponent, \"xSWegq4RvHf81zjfbU0M9K/zTEI=\");\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","MyComponent","imageUrl","setImageUrl","texture","setTexture","canvasRef","prompt","setPrompt","placeholder","setPlaceholder","textureLoader","TextureLoader","generateTexture","description","apiKey","body","model","api_key","headers","fetch","method","JSON","stringify","then","response","json","data","url","catch","error","console","load","canvas","current","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","geometry","BoxGeometry","material","MeshBasicMaterial","map","cube","Mesh","add","position","z","animate","requestAnimationFrame","render","e","target","value"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/MyComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport \"./interface.css\";\r\n\r\nfunction MyComponent() {\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [texture, setTexture] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [placeholder, setPlaceholder] = useState(\r\n    \"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\"\r\n  );\r\n\r\n  const textureLoader = new THREE.TextureLoader();\r\n\r\n  const generateTexture = () => {\r\n    // Generate image using DALL-E API\r\n    const description = \"A two-story pink house with a white fence and a red door.\";\r\n    const apiKey = \"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\";\r\n\r\n    const body = {\r\n      prompt: description,\r\n      model: \"image-alpha-001\",\r\n      api_key: apiKey\r\n    };\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    fetch(\"https://api.openai.com/v1/images/generations\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: headers\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setImageUrl(data.data[0].url);\r\n      })\r\n      .catch(error => console.error(error));\r\n\r\n    textureLoader.load(imageUrl, texture => {\r\n      setTexture(texture);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ canvas: canvas });\r\n\r\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n    const material = new THREE.MeshBasicMaterial({ map: texture });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    camera.position.z = 5;\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n  }, [canvasRef, texture]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={generateTexture}>Generate Texture</button>\r\n      <textarea\r\n            className=\"app-input\"\r\n            placeholder={placeholder}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            rows=\"10\"\r\n            cols=\"40\"\r\n          />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}