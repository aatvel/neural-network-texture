{"ast":null,"code":"import * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshLine, MeshLineMaterial } from 'meshline';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = function (point2, camera, size) {\n  let zValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\n\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef((_ref, fRef) => {\n  let {\n    matrix,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    autoTransform = true,\n    anchor,\n    disableAxes = false,\n    disableSliders = false,\n    disableRotations = false,\n    activeAxes = [true, true, true],\n    offset = [0, 0, 0],\n    rotation = [0, 0, 0],\n    scale = 1,\n    lineWidth = 4,\n    fixed = false,\n    translationLimits,\n    rotationLimits,\n    depthTest = true,\n    axisColors = ['#ff2060', '#20df80', '#2080ff'],\n    hoveredColor = '#ffff40',\n    displayValues = true,\n    opacity = 1,\n    visible = true,\n    userData,\n    children\n  } = _ref;\n  extend({\n    MeshLine,\n    MeshLineMaterial\n  });\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: () => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart();\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    displayValues,\n    depthTest,\n    userData\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, displayValues, userData, autoTransform]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\nexport { PivotControls, calculateScaleFactor };","map":{"version":3,"names":["THREE","React","extend","useThree","useFrame","MeshLine","MeshLineMaterial","AxisArrow","PlaneSlider","AxisRotator","context","tV0","Vector3","tV1","tV2","getPoint2","point3","camera","size","widthHalf","width","heightHalf","height","updateMatrixWorld","vector","project","x","y","getPoint3","point2","zValue","set","unproject","calculateScaleFactor","radiusPx","copy","scale","i","point2off","setComponent","getComponent","point3off","z","Math","max","distanceTo","mL0","Matrix4","mW0","mP","mPInv","mW","mL","mL0Inv","mdL","bb","Box3","bbObj","vCenter","vSize","vAnchorOffset","vPosition","xDir","yDir","zDir","PivotControls","forwardRef","fRef","matrix","onDragStart","onDrag","onDragEnd","autoTransform","anchor","disableAxes","disableSliders","disableRotations","activeAxes","offset","rotation","lineWidth","fixed","translationLimits","rotationLimits","depthTest","axisColors","hoveredColor","displayValues","opacity","visible","userData","children","invalidate","state","parentRef","useRef","ref","gizmoRef","childrenRef","translation","useLayoutEffect","current","updateWorldMatrix","matrixWorld","invert","makeEmpty","traverse","obj","geometry","boundingBox","computeBoundingBox","premultiply","applyMatrix4","union","add","min","multiplyScalar","sub","multiply","position","config","useMemo","mdW","vec","sf","getWorldPosition","_gizmoRef$current","_gizmoRef$current2","_gizmoRef$current3","setScalar","useImperativeHandle","createElement","Provider","value","matrixAutoUpdate","axis","direction","dir1","dir2"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/node_modules/@react-three/drei/core/pivotControls/index.js"],"sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshLine, MeshLineMaterial } from 'meshline';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\n\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  displayValues = true,\n  opacity = 1,\n  visible = true,\n  userData,\n  children\n}, fRef) => {\n  extend({\n    MeshLine,\n    MeshLineMaterial\n  });\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: () => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart();\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    displayValues,\n    depthTest,\n    userData\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, displayValues, userData, autoTransform]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls, calculateScaleFactor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}