{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\MyComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport \"./interface.css\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [texture, setTexture] = useState(null);\n  const canvasRef = useRef(null);\n  const [prompt, setPrompt] = useState(\"\");\n  const [placeholder, setPlaceholder] = useState(\"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\");\n  const textureLoader = new THREE.TextureLoader();\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    setPlaceholder(`Search ${prompt}..`);\n    setLoading(true);\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\"\n    });\n    setLoading(false);\n    setImageUrl(res.data.data[0].url);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas\n    });\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      map: texture\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, [canvasRef, texture]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateImage,\n      children: \"Generate Texture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"app-input\",\n      placeholder: placeholder,\n      onChange: e => setPrompt(e.target.value),\n      rows: \"10\",\n      cols: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyComponent, \"xSWegq4RvHf81zjfbU0M9K/zTEI=\");\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","Configuration","OpenAIApi","MyComponent","imageUrl","setImageUrl","texture","setTexture","canvasRef","prompt","setPrompt","placeholder","setPlaceholder","textureLoader","TextureLoader","configuration","apiKey","openai","generateImage","setLoading","res","createImage","n","size","data","url","canvas","current","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","geometry","BoxGeometry","material","MeshBasicMaterial","map","cube","Mesh","add","position","z","animate","requestAnimationFrame","render","e","target","value"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/MyComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport \"./interface.css\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\n\r\nfunction MyComponent() {\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [texture, setTexture] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [placeholder, setPlaceholder] = useState(\r\n    \"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\"\r\n  );\r\n\r\n  const textureLoader = new THREE.TextureLoader();\r\n\r\n\r\n  const configuration = new Configuration({\r\n    apiKey: \"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\",\r\n  });\r\n\r\n  const openai = new OpenAIApi(configuration);\r\n\r\n  const generateImage = async () => {\r\n    setPlaceholder(`Search ${prompt}..`);\r\n    setLoading(true);\r\n    const res = await openai.createImage({\r\n      prompt: prompt,\r\n      n: 1,\r\n      size: \"512x512\",\r\n    });\r\n    \r\n    setLoading(false);\r\n    setImageUrl(res.data.data[0].url);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ canvas: canvas });\r\n\r\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n    const material = new THREE.MeshBasicMaterial({ map: texture });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    camera.position.z = 5;\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n  }, [canvasRef, texture]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={generateImage}>Generate Texture</button>\r\n      <textarea\r\n            className=\"app-input\"\r\n            placeholder={placeholder}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            rows=\"10\"\r\n            cols=\"40\"\r\n          />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}