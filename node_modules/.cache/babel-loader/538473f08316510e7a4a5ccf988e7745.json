{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\threejs\\\\miro learning\\\\20.12 neuroweb textures\\\\src\\\\Experience.js\",\n    _s = $RefreshSig$();\n\nimport { useMatcapTexture, Center, Text3D, OrbitControls } from '@react-three/drei';\nimport PurplePlane from './Plane';\nimport { useEffect, useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32);\nconst material = new THREE.MeshMatcapMaterial();\nexport default function Experience() {\n  _s();\n\n  const donuts = useRef([]);\n  const [matcapTexture] = useMatcapTexture('7B5254_E9DCC7_B19986_C8AC91', 256);\n  useFrame((state, delta) => {\n    for (const donut of donuts.current) {\n      donut.rotation.y += delta * 0.2;\n    }\n  });\n  useEffect(() => {\n    matcapTexture.encoding = THREE.sRGBEncoding;\n    matcapTexture.needsUpdate = true;\n    material.matcap = matcapTexture;\n    material.needsUpdate = true;\n  }, []);\n  const [prompt, setPrompt] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\");\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    setPlaceholder(`Search ${prompt}..`);\n    setLoading(true);\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\"\n    });\n    setLoading(false);\n    setResult(res.data.data[0].url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {\n      makeDefault: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: [/*#__PURE__*/_jsxDEV(Text3D, {\n        material: material,\n        font: \"./fonts/helvetiker_regular.typeface.json\",\n        size: 0.75,\n        height: 0.2,\n        curveSegments: 12,\n        bevelEnabled: true,\n        bevelThickness: 0.02,\n        bevelSize: 0.02,\n        bevelOffset: 0,\n        bevelSegments: 5,\n        \"position-x\": 4,\n        children: \"TRY IT!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PurplePlane, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), [...Array(100)].map((value, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: element => donuts.current[index] = element,\n      geometry: torusGeometry,\n      material: material,\n      position: [Math.cos(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2), (Math.random() - 0.4) * 10, Math.sin(-(Math.random() * Math.PI * 2)) * (10 + Math.random() * 2)],\n      scale: 0.2 + Math.random() * 0.2,\n      rotation: [Math.random() * Math.PI, Math.random() * Math.PI, 0],\n      children: /*#__PURE__*/_jsxDEV(\"torusGeometry\", {\n        args: [1, 0.6, 16, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Experience, \"sTXI+rMAajzq9o6Dk0/nGgBUDBI=\", false, function () {\n  return [useMatcapTexture, useFrame];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useMatcapTexture","Center","Text3D","OrbitControls","PurplePlane","useEffect","useRef","useState","useFrame","THREE","Configuration","OpenAIApi","torusGeometry","TorusGeometry","material","MeshMatcapMaterial","Experience","donuts","matcapTexture","state","delta","donut","current","rotation","y","encoding","sRGBEncoding","needsUpdate","matcap","prompt","setPrompt","result","setResult","loading","setLoading","placeholder","setPlaceholder","configuration","apiKey","openai","generateImage","res","createImage","n","size","data","url","Array","map","value","index","element","Math","cos","random","PI","sin"],"sources":["C:/Users/Asus/Documents/threejs/miro learning/20.12 neuroweb textures/src/Experience.js"],"sourcesContent":["import { useMatcapTexture, Center, Text3D, OrbitControls } from '@react-three/drei'\nimport PurplePlane from './Plane'\nimport { useEffect, useRef, useState } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport * as THREE from 'three'\nimport { Configuration, OpenAIApi } from \"openai\";\n\n\n\nconst torusGeometry = new THREE.TorusGeometry(1, 0.6, 16, 32)\nconst material = new THREE.MeshMatcapMaterial()\n\nexport default function Experience()\n{\n\n    const donuts = useRef([])\n    const [ matcapTexture ] = useMatcapTexture('7B5254_E9DCC7_B19986_C8AC91', 256)\n    useFrame((state, delta) =>\n    {\n        for(const donut of donuts.current)\n        {\n            donut.rotation.y += delta * 0.2\n        }\n    })\n    useEffect(() =>\n    {\n        matcapTexture.encoding = THREE.sRGBEncoding\n        matcapTexture.needsUpdate = true\n\n        material.matcap = matcapTexture\n        material.needsUpdate = true\n    }, [])\n\n\n    const [prompt, setPrompt] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\n    \"Search Bears with Paint Brushes the Starry Night, painted by Vincent Van Gogh..\"\n  );\n  const configuration = new Configuration({\n    apiKey: \"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\",\n  });\n\n  const openai = new OpenAIApi(configuration);\n\n  const generateImage = async () => {\n    setPlaceholder(`Search ${prompt}..`);\n    setLoading(true);\n    const res = await openai.createImage({\n      prompt: prompt,\n      n: 1,\n      size: \"512x512\",\n    });\n    setLoading(false);\n    setResult(res.data.data[0].url);\n  };\n\n    return <>\n\n        {/* <Perf position=\"top-left\" /> */}\n\n        <OrbitControls makeDefault />\n\n        <Center>\n            <Text3D\n                material={ material }\n                font=\"./fonts/helvetiker_regular.typeface.json\"\n                size={ 0.75 }\n                height={ 0.2 }\n                curveSegments={ 12 }\n                bevelEnabled\n                bevelThickness={ 0.02 }\n                bevelSize={ 0.02 }\n                bevelOffset={ 0 }\n                bevelSegments={ 5 }\n                position-x={ 4 }\n            >\n                TRY IT!\n            </Text3D>\n\n            <PurplePlane/>\n        </Center>\n\n        { [...Array(100)].map((value, index) =>\n            <mesh\n                ref={ (element) => donuts.current[index] = element }\n                key={ index }\n                geometry={ torusGeometry }\n                material={ material }\n                position={ [\n                    (Math.cos(- ((Math.random() * Math.PI * 2 ))) * (10 + Math.random() * 2)),\n                    ((Math.random() - 0.4 )* 10),\n                    (Math.sin(- ((Math.random() * Math.PI * 2 ))) * (10 + Math.random() * 2))\n                ] }\n                scale={ 0.2 + Math.random() * 0.2 }\n                rotation={ [\n                    Math.random() * Math.PI,\n                    Math.random() * Math.PI,\n                    0\n                ] }\n            >\n                <torusGeometry args={ [ 1, 0.6, 16, 32 ] } />\n            </mesh>\n        ) }\n\n    </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}